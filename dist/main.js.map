{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../commons/arr/remove.js","webpack:///../commons/js/isArray.js","webpack:///../commons/js/instanceof.js","webpack:///../commons/js/isObject.js","webpack:///../commons/js/isFunction.js","webpack:///../commons/js/isTypeFunction.js","webpack:///../commons/js/isTypeObject.js","webpack:///../commons/js/isBoolean.js","webpack:///../commons/js/isNumeric.js","webpack:///../commons/obj/each.js","webpack:///../commons/obj/even.js","webpack:///../commons/obj/compareCallback.js","webpack:///./src/ExprInterface.js","webpack:///./src/Expr/AssignmentInterface.js","webpack:///./src/Expr/ReferenceInterface.js","webpack:///./src/Expr/DeletionInterface.js","webpack:///./src/Expr/CallInterface.js","webpack:///./src/Jsen.js","webpack:///../commons/js/isString.js","webpack:///../commons/js/isUndefined.js","webpack:///../commons/js/isNull.js","webpack:///../commons/arr/from.js","webpack:///../commons/js/isEmpty.js","webpack:///../commons/js/isTypeArray.js","webpack:///../commons/arr/flatten.js","webpack:///../commons/arr/first.js","webpack:///../commons/arr/last.js","webpack:///../commons/obj/getAllPropertyNames.js","webpack:///../commons/obj/getPrototypeChain.js","webpack:///../commons/arr/pushUnique.js","webpack:///../commons/obj/mergeCallback.js","webpack:///../commons/obj/merge.js","webpack:///../commons/obj/copyPlain.js","webpack:///./src/Lexer.js","webpack:///../commons/js/isObservable.js","webpack:///../commons/arr/all.js","webpack:///../commons/obj/get.js","webpack:///./src/Contexts.js","webpack:///../commons/str/wrapped.js","webpack:///../commons/str/after.js","webpack:///../commons/str/unwrap.js","webpack:///../commons/str/beforeLast.js","webpack:///../commons/str/before.js","webpack:///./src/Expr/AbstractionInterface.js","webpack:///./src/Expr/Abstraction.js","webpack:///./src/Expr/ArrInterface.js","webpack:///./src/Expr/Arr.js","webpack:///./src/Expr/ArgumentsInterface.js","webpack:///./src/Expr/Arguments.js","webpack:///../commons/arr/unique.js","webpack:///./src/Expr/AssertionInterface.js","webpack:///./src/Expr/Assertion.js","webpack:///./src/Expr/Assignment.js","webpack:///./src/Expr/BoolInterface.js","webpack:///./src/Expr/Bool.js","webpack:///./src/Expr/Call.js","webpack:///./src/Expr/CommentsInterface.js","webpack:///./src/Expr/Comments.js","webpack:///./src/Expr/ComparisonInterface.js","webpack:///./src/Expr/Comparison.js","webpack:///../commons/arr/difference.js","webpack:///./src/Expr/ConditionInterface.js","webpack:///./src/Expr/Condition.js","webpack:///./src/Expr/Deletion.js","webpack:///./src/Expr/FuncInterface.js","webpack:///./src/Expr/Func.js","webpack:///../commons/arr/intersect.js","webpack:///./src/Expr/MathInterface.js","webpack:///./src/Expr/Math.js","webpack:///./src/Expr/NumInterface.js","webpack:///./src/Expr/Num.js","webpack:///./src/Expr/ObjInterface.js","webpack:///./src/Expr/Obj.js","webpack:///./src/Expr/Reference.js","webpack:///./src/Expr/ReturnInterface.js","webpack:///./src/Expr/Return.js","webpack:///./src/Expr/StatementsInterface.js","webpack:///./src/Expr/Statements.js","webpack:///./src/Expr/StrInterface.js","webpack:///./src/Expr/Str.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","arr","indexOf","itm","limit","splice","Array","isArray","val","obj","classB","mixinTest","classA","Function","prototypes","reduce","prevAns","getPrototypeOf","constructor","toString","isNaN","returnValue","undefined","keys","forEach","k","callback","parseFloat","_even","obj1","obj2","assertion","depth","length","result","contn","v1","testPass","v2","netComparison","push","contrast","returnOnFirstFalse","Expr","jsenType","this","Super","comments","meta","vars","Interface","ExprInterface","Jsen","expr","Parsers","params","Static","parsers","values","grammars","varsScope","parsed","parse","_expr","_Parsers","slice","ReferenceInterface","CallInterface","context","explain","console","log","AssignmentInterface","DeletionInterface","mutates","Error","assert","arguments","_flatten","withObjects","acc","concat","count","firsts","amount","reverse","keysAll","until","prototypalChain","items","getOwnPropertyNames","objs","shift","deepProps","valAtObj1","valAtObj2","isReplace","withSymbols","getOwnPropertyDescriptor","e","filter","Lexer","str","delims","options","instance","$cache","lex","tokens","matches","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","nesting","maxDepth","matchesi","cache","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","preserveComments","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","quote","block","match","RegExp","Math","max","testList","test","useRegex","ci","toLowerCase","target","splitSeries","regParse","input","method","prevTest","detectObservables","path","_ctxt","ctxt","_key","isObsvble","reciever","exists","varName","bindThis","cntxt","subject","startsWith","openingTag","endsWith","closingTag","search","pos","afterLast","lastIndexOf","beforeLast","Abstraction","AbstractionInterface","super","eval","parseCallback","Arr","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","map","trim","split","Arguments","ArgumentsInterface","list","arg","index","self","Assertion","AssertionInterface","logic","operators","toUpperCase","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","reference","operator","getEval","Bool","BoolInterface","state","Call","args","_contexts","func","_cntxts","handler","utils","Num","Str","Obj","unshift","pop","Comments","CommentsInterface","type","_comments","commentPlacement","splits","_beforeLast","line","replace","commenta","Comparison","ComparisonInterface","operand1","operand2","compare","oper","allItemsMatch","sort","entry1Keys","entry2Keys","arr2","val1","val2","allEntriesMatch","strict","exact","is","isNull","equalsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","Condition","ConditionInterface","onTrue","onFalse","Deletion","red","del","Func","FuncInterface","paramters","statements","arrowFunctionFormatting","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","localContext","defaultVal","multipleContexts","headNoWrap","head","bodyNoWrap","body","b","funcHead","funcBody","param","paramSplit","MathInterface","currentTotal","sub","NumInterface","int","dec","parseInt","ObjInterface","entries","_entriesSplit","entry","Reference","backticks","sourceContext","parts","subjectContext","separator","nameSplit","isContext","Return","ReturnInterface","exprLc","Statements","StatementsInterface","stmts","delim","StrInterface","window","OnePhrase"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n","\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n","\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || typeof val === 'object';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n","\r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nexport default function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach(k => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _compareCallback from './compareCallback.js';\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif ((_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length)\r\n\t|| (_isObject(obj1) && _isObject(obj2) && Object.keys(obj1).length !== Object.keys(obj2).length)) {\r\n\t\treturn false;\r\n\t}\r\n\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\tif (depth > 0 && ((_isArray(v1) && _isArray(v2)) || (_isObject(v1) && _isObject(v2)))) {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}\r\n\t\treturn _isFunction(assertion) ? assertion(v1, v2) : (v1 === v2) === assertion;\r\n\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\treturn _isArray(result) ? result.length === obj1.length\r\n\t\t: (_isObject(result) ? Object.keys(result).length === Object.keys(obj1).length : result);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _even;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isBoolean from '../js/isBoolean.js';\r\nimport _each from './each.js';\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nexport default function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);;\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObject from '@onephrase/commons/js/isObject.js';\r\nimport _even from '@onephrase/commons/obj/even.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, callback = null)\r\n\t\r\n\t/**\r\n\t * Serializes the expression instance back to a string,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t//toString(context = null)\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _remove from '@onephrase/commons/arr/remove.js';\r\nimport _isArray from '@onephrase/commons/js/isArray.js';\r\nimport _instanceof from '@onephrase/commons/js/instanceof.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Jsen = class {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}, Static = Jsen) {\r\n\t\tif (!params.meta) {\r\n\t\t\tparams.meta = {vars: []};\r\n\t\t}\r\n\t\tif (expr.length) {\r\n\t\t\tvar parsers = Object.values(Parsers || Static.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\t// From this point forward, all vars is within current scope\r\n\t\t\t\tvar varsScope = params.meta && _isArray(params.meta.vars) ? params.meta.vars.length : 0;\r\n\t\t\t\tvar parsed = parsers[i].parse(expr, (_expr, _Parsers) => Jsen.parse(_expr, _Parsers, params, Static));\r\n\t\t\t\t// Add/remove vars to scope\r\n\t\t\t\tif (parsed && params.meta) {\r\n\t\t\t\t\tif (!parsed.meta) {\r\n\t\t\t\t\t\tparsed.meta = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Reap vars into scope expr\r\n\t\t\t\t\tparsed.meta.vars = params.meta.vars.slice(varsScope);\r\n\t\t\t\t\t// Add vars to scope\r\n\t\t\t\t\tif (_instanceof(parsed, ReferenceInterface) || _instanceof(parsed, CallInterface)) {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, parsed.context);\r\n\t\t\t\t\t\t_remove(params.meta.vars, parsed.context);\r\n\t\t\t\t\t\tparams.meta.vars.push(parsed);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed && params.explain) {\r\n\t\t\t\t\tconsole.log(expr, ' >>------------->> ', parsed.jsenType);\r\n\t\t\t\t}\r\n\t\t\t\tif ((parsed instanceof AssignmentInterface || parsed instanceof DeletionInterface) \r\n\t\t\t\t&& (!params || !params.mutates)) {\r\n\t\t\t\t\tthrow new Error('[Permission error:] ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error('[Syntax error:] ' + expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Jsen;\r\n","\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'string';\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n","\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n *\r\n * @return array\r\n */\r\nexport default function(val) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default _flatten;","\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from './first.js';\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nexport default function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _pushUnique from '../arr/pushUnique.js';\r\nimport _getPrototypeChain from './getPrototypeChain.js';\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nexport default function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nexport default function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n","\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _isObject from '../js/isObject.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isNumeric from '../js/isNumeric.js';\r\nimport _getAllPropertyNames from './getAllPropertyNames.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\t_mergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (withSymbols) {\r\n\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// In case we're setting a read-only property\r\n\t\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t\t} catch(e) {}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nexport default function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t});\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isFunction from '../js/isFunction.js';\r\nimport _mergeCallback from './mergeCallback.js';\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nexport default function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isString from '@onephrase/commons/js/isString.js';\r\nimport _isUndefined from '@onephrase/commons/js/isUndefined.js';\r\nimport _arrFrom from '@onephrase/commons/arr/from.js';\r\nimport _flatten from '@onephrase/commons/arr/flatten.js';\r\nimport _first from '@onephrase/commons/arr/first.js';\r\nimport _last from '@onephrase/commons/arr/last.js';\r\nimport _merge from '@onephrase/commons/obj/merge.js';\r\nimport _even from '@onephrase/commons/obj/even.js';\r\nimport _copyPlain from '@onephrase/commons/obj/copyPlain.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nconst Lexer = class {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\t// CREATE NEW -----------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\t// GIVE CACHE -----------------------------\r\n\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\tLexer.$cache[str].push(instance);\r\n\t\t// RETURN NEW -----------------------------\r\n\t\treturn instance.lex(delims);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t\tthis.$cache = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _arrFrom(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// ASK INSTANCE CACHE ---------------------------\r\n\t\tif (runtime.options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < this.$cache.length; i ++) {\r\n\t\t\t\tif (_even(this.$cache[i].delims, runtime.delims) && _even(this.$cache[i].options, runtime.options)) {\r\n\t\t\t\t\treturn _copyPlain(this.$cache[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// EVALUATE NEW --------------------------------\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tthis._evalCharsAt(runtime, 0);\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// GIVE CACHE ----------------------------------\r\n\t\tif (runtime.options.cache !== false) {\r\n\t\t\tthis.$cache.push(runtime);\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments');\r\n\t\t\t\tif (runtime.options.preserveComments) {\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn this._evalCharsAt(runtime, i + 1);\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\treturn this._evalCharsAt(runtime, i + (matchedDelim.length || 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._evalCharsAt(runtime, i + charWidth);\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + _first(block)));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = m[0];\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + _last(block)));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = this.$str.substr(i).match(new RegExp('^' + _first(block)));\r\n\t\t\tif (starting) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting[0];\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = this.$str.substr(i).match(new RegExp('^' + _last(block)));\r\n\t\t\t\tif (ending) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens') {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime[target][splitSeries])) {\r\n\t\t\truntime[target][splitSeries] = '';\r\n\t\t}\r\n\t\truntime[target][splitSeries] += chars;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['\\\\(', '\\\\)'], ['\\\\[', '\\\\]'], ['\\\\{', '\\\\}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['\\\\/\\\\*', '\\\\*\\\\/'], ['\\\\/\\\\/', '(\\\\r)?\\\\n'],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Lexer;\r\n\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _all from '../arr/all.js';\r\nimport _isFunction from './isFunction.js';\r\nimport _isObject from './isObject.js';\r\n\r\n/**\r\n * Tells if a given object has observability methods.\r\n *\r\n * @param mixed\t\tinput\r\n *\r\n * @return bool\r\n */\r\nexport default function(input) {\r\n\treturn _isObject(input) && _all([\r\n\t\t'observe',\r\n\t\t'unobserve',\r\n\t\t'get',\r\n\t\t'set',\r\n\t\t'has',\r\n\t\t'del',\r\n\t], method => _isFunction(input[method]));\r\n};\r\n","\r\n/**\r\n * Tells if ALL items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nexport default function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm) => prevTest && callback(itm), true);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isObservable from '../js/isObservable.js';\r\nimport _isTypeObject from '../js/isTypeObject.js';\r\nimport _isUndefined from '../js/isUndefined.js';\r\nimport _isNull from '../js/isNull.js';\r\nimport _arrFrom from '../arr/from.js';\r\n\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false.\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\treciever\r\n * @param bool\t \t\t\t\tdetectObservables\r\n *\r\n * @return mixed\r\n */\r\nexport default function(ctxt, path, reciever = {}, detectObservables = true) {\r\n\tpath = _arrFrom(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tvar isObsvble = detectObservables && _isObservable(_ctxt);\r\n\t\tif (!(isObsvble ? _ctxt.get(_key) : (_isTypeObject(_ctxt) ? _key in _ctxt : _ctxt[_key]))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = isObsvble ? _ctxt.get(_key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _get from '@onephrase/commons/obj/get.js';\r\nimport _isUndefined from '@onephrase/commons/js/isUndefined.js';\r\nimport _isFunction from '@onephrase/commons/js/isFunction.js';\r\n\r\n/**\r\n * @exports\r\n */\r\nclass Contexts extends Array {\r\n\t\r\n\t/**\r\n\t * Returns the first found \"undefined\" value of a reference from \r\n\t * from contexts.\r\n\t *\r\n\t * @param string|number varName\r\n\t * @param bool\t\t\tbindThis\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\tget(varName, bindThis = true) {\r\n\t\tfor(var i = 0; i < this.length; i ++) {\r\n\t\t\tvar val = _get(this[i], varName);\r\n\t\t\tif (_isFunction(val) && bindThis) {\r\n\t\t\t\treturn val.bind(this[i]);\r\n\t\t\t}\r\n\t\t\tif (!_isUndefined(val)) {\r\n\t\t\t\treturn val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * Factory method for making a Contexts instance.\r\n\t *\r\n\t * @param array|object \tcntxt\r\n\t *\r\n\t * @return Contexts\r\n\t */\r\n\tstatic create(cntxt) {\r\n\t\treturn cntxt instanceof Contexts ? cntxt \r\n\t\t\t: (cntxt ? new Contexts(cntxt) : new Contexts());\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Contexts;","\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n","\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from './after.js';\r\nimport _beforeLast from './beforeLast.js';\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _before from './before.js';\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n","\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nexport default function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.expr.eval(context, callback);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.expr.toString(context) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Abstraction) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, callback));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.toString(context)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Arr) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new Static(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.list.map(arg => arg.eval(context, callback));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.list.map(arg => arg.toString(context)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Arguments) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nexport default function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _first from '@onephrase/commons/arr/first.js';\r\nimport _flatten from '@onephrase/commons/arr/flatten.js';\r\nimport _unique from '@onephrase/commons/arr/unique.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, callback = null) {\r\n\t\tif (this.logic === '!') {\r\n\t\t\treturn !_first(this.exprs).eval(context, callback);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tlastResult = this.exprs[i].eval(context, callback);\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t toString(context = null) {\r\n\t\tif (this.logic === '!') {\r\n\t\t\treturn '!' + _first(this.exprs).toString(context);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.toString(context)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Assertion) {\r\n\t\tif (expr.startsWith('!')) {\r\n\t\t\treturn new Static(\r\n\t\t\t\t[parseCallback(expr.substr(1))],\r\n\t\t\t\t'!'\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@onephrase/commons/arr/last.js';\r\nimport _isUndefined from '@onephrase/commons/js/isUndefined.js';\r\nimport _isFunction from '@onephrase/commons/js/isFunction.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, val, operator = '=') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar reference = this.reference.getEval(context, callback);\r\n\t\tvar val = this.val.eval(context, callback);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, reference.context, reference.name, val);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar cntxt = reference.context instanceof Contexts \r\n\t\t\t\t? _last(reference.context) \r\n\t\t\t\t: reference.context;\r\n\t\t\t// -----------------------------\r\n\t\t\tcntxt[reference.name] = val;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.reference.toString(context), this.operator, this.val.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Assignment) {\r\n\t\tvar parse = Lexer.lex(expr, Static.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar reference, val;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface) \r\n\t\t\t|| !(val = parseCallback(parse.tokens.shift().trim()))) {\r\n\t\t\t\tthrow new Error('Invalid assignment directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, val, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [' = '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Bool) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new Static(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '@onephrase/commons/js/isArray.js';\r\nimport _isFunction from '@onephrase/commons/js/isFunction.js';\r\nimport _isUndefined from '@onephrase/commons/js/isUndefined.js';\r\nimport _isNumeric from '@onephrase/commons/js/isNumeric.js';\r\nimport _isObject from '@onephrase/commons/js/isObject.js';\r\nimport _isString from '@onephrase/commons/js/isString.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar reference = this.reference.getEval(context, callback);\r\n\t\tvar args = this.args.eval(context, callback);\r\n\t\tif (!_isUndefined(reference.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, reference.context, reference.name, args);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _contexts = Contexts.create(reference.context).slice();\r\n\t\t\tvar func = _contexts.get(reference.name, true/*bindThis*/);\r\n\t\t\tif (_isFunction(func)) {\r\n\t\t\t\treturn func(...args);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar handler, _cntxts = _contexts.slice();\r\n\t\t\twhile(_cntxts.length && !handler) {\r\n\t\t\t\tvar cntxt = _cntxts.shift();\r\n\t\t\t\tvar utils = Call.utils || {};\r\n\t\t\t\tvar handler = _isNumeric(cntxt) && utils.Num ? utils.Num\r\n\t\t\t\t\t: (_isString(cntxt) && utils.Str ? utils.Str\r\n\t\t\t\t\t\t: (_isArray(cntxt) && utils.Arr ? utils.Arr\r\n\t\t\t\t\t\t\t: (_isObject(cntxt) && utils.Obj ? utils.Obj : null)));\r\n\t\t\t\tif (handler && _isFunction(handler[reference.name])) {\r\n\t\t\t\t\targs.unshift(cntxt);\r\n\t\t\t\t\treturn handler[reference.name](...args);\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('\"' + this + '\" is not a function. (Called on ' + _contexts.map(c => typeof c).join(', ') + ')');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.reference.toString(context) + this.args.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Call) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''))) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new Error('Invalid call directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CommentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Comments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _after from '@onephrase/commons/str/after.js';\r\nimport _before from '@onephrase/commons/str/before.js';\r\nimport CommentsInterface from './CommentsInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Comments = class extends CommentsInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(comments, type) {\r\n\t\tsuper();\r\n\t\tthis.comments = comments;\r\n\t\tthis.type = type;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Comments) {\r\n\t\tvar _comments = null;\r\n\t\tvar _expr = null;\r\n\t\tvar type = 0;\r\n\t\tvar commentPlacement = 'before';\r\n\t\t// Oneliner comments\r\n\t\tif (expr.startsWith('//')) {\r\n\t\t\tvar splits = Lexer.split(_after(expr, '//'), [\"\\r\\n\"]);\r\n\t\t\t_comments = splits.shift().trim();\r\n\t\t\t_expr = splits.shift().trim();\r\n\t\t\ttype = 1;\r\n\t\t} else if (expr.startsWith('/*')) {\r\n\t\t\tvar splits = Lexer.split(_after(expr, '/*'), [\"*/\"]);\r\n\t\t\t_comments = splits.shift().trim();\r\n\t\t\t_expr = splits.shift().trim();\r\n\t\t\ttype = 2;\r\n\t\t} else if (expr.endsWith('*/')) {\r\n\t\t\tvar splits = Lexer.split(_beforeLast(expr, '*/'), [\"/*\"]);\r\n\t\t\t_comments = splits.pop().trim();\r\n\t\t\t_expr = splits.pop().trim();\r\n\t\t\ttype = 2;\r\n\t\t\tvar commentPlacement = 'after';\r\n\t\t}\r\n\t\tif (type) {\r\n\t\t\tif (type === 2) {\r\n\t\t\t\t_comments = Lexer.split(_comments.trim(), [\"\\r\\n\"])\r\n\t\t\t\t\t.map(line => line.replace(/^[\\*]+/, ''))\r\n\t\t\t\t\t.filter(line => line.trim());\r\n\t\t\t}\r\n\t\t\tconsole.log(_comments, commentPlacement, expr);\r\n\t\t\t_comments = new Static(_comments, type);\r\n\t\t}\r\n\t\tif (_expr) {\r\n\t\t\t_expr = parseCallback(_expr);\r\n\t\t\t_expr.meta.commenta = _comments;\r\n\t\t\treturn _expr;\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@onephrase/commons/arr/flatten.js';\r\nimport _first from '@onephrase/commons/arr/first.js';\r\nimport _last from '@onephrase/commons/arr/last.js';\r\nimport _difference from '@onephrase/commons/arr/difference.js';\r\nimport _isArray from '@onephrase/commons/js/isArray.js';\r\nimport _isObject from '@onephrase/commons/js/isObject.js';\r\nimport _isString from '@onephrase/commons/js/isString.js';\r\nimport _each from '@onephrase/commons/obj/each.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Comparison = class extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn Comparison.compare(\r\n\t\t\tthis.operand1.eval(context, callback), \r\n\t\t\tthis.operand2.eval(context, callback), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.toString(context), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Comparison) {\r\n\t\tvar operators = _flatten(Static.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(Comparison.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tif (_isArray(operand1) && _isArray(operand2) && operator !== '===') {\r\n\t\t\tif (operand1.length !== operand2.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar allItemsMatch = true;\r\n\t\t\toperand1.sort();\r\n\t\t\toperand2.sort();\r\n\t\t\tfor (var i = 0; i < operand1.length; i ++) {\r\n\t\t\t\tallItemsMatch = allItemsMatch && Comparison.compare(operand1[i], operand2[i], operator);\r\n\t\t\t}\r\n\t\t\treturn allItemsMatch;\r\n\t\t} else if (_isObject(operand1) && _isObject(operand2) && operator !== '===') {\r\n\t\t\tvar entry1Keys = Object.keys(operand1);\r\n\t\t\tvar entry2Keys = Object.keys(operand2);\r\n\t\t\tif (entry1Keys.length !== entry2Keys.length || _difference(entry1Keys, entry2Keys).length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar allEntriesMatch = true;\r\n\t\t\t_each(entry1Keys, (i, key) => {\r\n\t\t\t\tallEntriesMatch = allEntriesMatch && Comparison.compare(operand1[key], operand2[key], operator);\r\n\t\t\t});\r\n\t\t\treturn allEntriesMatch;\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn operand2.match(new RegExp(operand1));\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !Comparison.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comparison;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the difference of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) === -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ConditionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Condition = class extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.assertion.eval(context, callback) \r\n\t\t\t? this.onTrue.eval(context, callback) \r\n\t\t\t: this.onFalse.eval(context, callback);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.toString(context), \r\n\t\t\tCondition.operators[0], \r\n\t\t\tthis.onTrue.toString(context),\r\n\t\t\tCondition.operators[1], \r\n\t\t\tthis.onFalse.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Condition) {\r\n\t\tvar splits = Lexer.split(expr, Static.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = ['?', ':'];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Condition;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _last from '@onephrase/commons/arr/last.js';\r\nimport _isFunction from '@onephrase/commons/js/isFunction.js';\r\nimport _isUndefined from '@onephrase/commons/js/isUndefined.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar reference = this.reference.getEval(context, callback);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, reference.context, reference.name);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar cntxt = reference.context instanceof Contexts \r\n\t\t\t\t? _last(reference.context) \r\n\t\t\t\t: reference.context;\r\n\t\t\t// -----------------------------\r\n\t\t\tdelete cntxt[reference.name];\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.operator + ' ' + this.reference.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Deletion) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(Static.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new Error('Invalid delete directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _copy from '@onephrase/commons/obj/copy.js';\r\nimport _each from '@onephrase/commons/obj/each.js';\r\nimport _flatten from '@onephrase/commons/arr/flatten.js';\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, arrowFunctionFormatting = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.arrowFunctionFormatting = arrowFunctionFormatting;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn (...args) => {\r\n\t\t\tvar localContext = {};\r\n\t\t\t_each(Object.keys(this.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = this.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tlocalContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (this.paramters[name] \r\n\t\t\t\t\t\t? this.paramters[name].eval(context, callback) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\t// But this newer context should come first\r\n\t\t\tvar multipleContexts = Contexts.create(localContext).concat(Contexts.create(context));\r\n\t\t\treturn this.statements.eval(multipleContexts, callback);\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.toString(context) : ''));\r\n\t\t});\r\n\t\tif (this.arrowFunctionFormatting) {\r\n\t\t\tvar headNoWrap = this.arrowFunctionFormatting.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\t\tvar bodyNoWrap = this.arrowFunctionFormatting.body === false\r\n\t\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t\t+ ' => ' + (bodyNoWrap ? this.statements.toString(context) : '{' + this.statements.toString(context) + '}');\r\n\t\t}\r\n\t\treturn 'function (' + paramters.join(', ') + ') {' + this.statements.toString(context) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Func) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim());\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar statements = parseCallback(funcBody);\r\n\t\treturn new Static(paramters, statements, arrowFunctionFormatting);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@onephrase/commons/js/isNumeric.js';\r\nimport _flatten from '@onephrase/commons/arr/flatten.js';\r\nimport _intersect from '@onephrase/commons/arr/intersect.js';\r\nimport _unique from '@onephrase/commons/arr/unique.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, callback);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, callback));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.val.toString(context)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.toString(context))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Math) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, Math.operators.sup).length && _intersect(operators, Math.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: [' + ', ' - '],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isNumeric from '@onephrase/commons/js/isNumeric.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Num) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport _first from '@onephrase/commons/arr/first.js';\r\nimport _last from '@onephrase/commons/arr/last.js';\r\nimport _each from '@onephrase/commons/obj/each.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, callback);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.toString(context));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Obj) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new Static(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _isUndefined from '@onephrase/commons/js/isUndefined.js';\r\nimport _isFunction from '@onephrase/commons/js/isFunction.js';\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Reference = class extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, callback = null) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, callback);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, callback);\r\n\t\t}\r\n\t\treturn {context:sourceContext, name:name,};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar parts = this.getEval(context, callback);\r\n\t\tif (!_isUndefined(parts.context) && !_isUndefined(parts.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, parts.context, parts.name);\r\n\t\t\t}\r\n\t\t\treturn Contexts.create(parts.context).get(parts.name);\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.toString(context);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.toString(context) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Reference) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [Static.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.isContext = true;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new Error('Invalid reference: ' + expr + '!');\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new Static(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.expr ? this.expr.eval(context, callback) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.expr ? 'return ' + this.expr.toString(context) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Return) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StatementsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Statements'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _flatten from '@onephrase/commons/arr/flatten.js';\r\nimport StatementsInterface from './StatementsInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Statements class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Statements = class extends StatementsInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = exprs;\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar exprs = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tif (this.stmts[i] instanceof ReturnInterface) {\r\n\t\t\t\treturn this.stmts[i].eval(context, callback);\r\n\t\t\t} else {\r\n\t\t\t\texprs[i] = this.stmts[i].eval(context, callback);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn exprs;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.stmts.map(expr => expr.toString(context)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Statements) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr)),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nStatements.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Statements;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport _wrapped from '@onephrase/commons/str/wrapped.js';\r\nimport _unwrap from '@onephrase/commons/str/unwrap.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Str) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new Static(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport Lexer from './Lexer.js';\r\nimport Contexts from './Contexts.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comments from './Expr/Comments.js';\r\nimport CommentsInterface from './Expr/CommentsInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Statements from './Expr/Statements.js';\r\nimport StatementsInterface from './Expr/StatementsInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tComments: Comments,\t\t\t// // single-line | /* double-line */\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tStatements: Statements,\t\t// field1 = 3; field2 = val2\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t\t\t// field1\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tLexer,\r\n\tContexts\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tComments,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tStatements\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tCommentsInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tStatementsInterface\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './index.js';\r\n\r\n// As globals\r\nif (!window.OnePhrase) {\r\n\twindow.OnePhrase = {};\r\n}\r\nwindow.OnePhrase.Jsen = Jsen;"],"sourceRoot":""}