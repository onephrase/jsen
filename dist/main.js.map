{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../commons/src/Obj.js","webpack:///../commons/src/Js.js","webpack:///../commons/src/Arr.js","webpack:///./src/ExprInterface.js","webpack:///./src/Expr/AssignmentInterface.js","webpack:///./src/Expr/ReferenceInterface.js","webpack:///./src/Expr/DeletionInterface.js","webpack:///./src/Expr/CallInterface.js","webpack:///./src/Jsen.js","webpack:///./src/Lexer.js","webpack:///./src/Contexts.js","webpack:///../commons/src/Str.js","webpack:///./src/Expr/AbstractionInterface.js","webpack:///./src/Expr/Abstraction.js","webpack:///./src/Expr/ArrInterface.js","webpack:///./src/Expr/Arr.js","webpack:///./src/Expr/ArgumentsInterface.js","webpack:///./src/Expr/Arguments.js","webpack:///./src/Expr/AssertionInterface.js","webpack:///./src/Expr/Assertion.js","webpack:///./src/Expr/Assignment.js","webpack:///./src/Expr/BoolInterface.js","webpack:///./src/Expr/Bool.js","webpack:///./src/Expr/Call.js","webpack:///./src/Expr/CommentsInterface.js","webpack:///./src/Expr/Comments.js","webpack:///./src/Expr/ComparisonInterface.js","webpack:///./src/Expr/Comparison.js","webpack:///./src/Expr/ConditionInterface.js","webpack:///./src/Expr/Condition.js","webpack:///./src/Expr/Deletion.js","webpack:///./src/Expr/FuncInterface.js","webpack:///./src/Expr/Func.js","webpack:///./src/Expr/MathInterface.js","webpack:///./src/Expr/Math.js","webpack:///./src/Expr/NumInterface.js","webpack:///./src/Expr/Num.js","webpack:///./src/Expr/ObjInterface.js","webpack:///./src/Expr/Obj.js","webpack:///./src/Expr/Reference.js","webpack:///./src/Expr/ReturnInterface.js","webpack:///./src/Expr/Return.js","webpack:///./src/Expr/StatementsInterface.js","webpack:///./src/Expr/Statements.js","webpack:///./src/Expr/StrInterface.js","webpack:///./src/Expr/Str.js","webpack:///../commons/src/Num.js","webpack:///../commons/src/index.js","webpack:///./src/index.js","webpack:///./src/browser-entry.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_from","val","obj","arguments","length","_isString","_isArray","forEach","k","_with","entriesOrKey","_merge","_isObject","_each","callback","returnValue","undefined","_isTypeObject","keys","_isNumeric","parseFloat","_get","ctxt","path","reciever","detectObservables","slice","_ctxt","_isUndefined","_isNull","_key","shift","isObsvble","_isObservable","has","exists","_set","buildTree","target","_isFunction","_unset","reduceTree","success","lastKey","pop","_obj","_isset","_first","_last","_sample","amount","_rand","_copy","_find","deep","values","subKey","reduce","prev","curr","indexOf","concat","_getAllPropertyNames","until","keysAll","_getPrototypeChain","_pushUnique","getOwnPropertyNames","prototypalChain","push","getPrototypeOf","_copyPlain","filter","_mergeCallback","obj1","obj2","depth","objs","_inherit","_replace","replaceIntoEmptyObj","_even","assertion","result","_compareCallback","v1","v2","_match","netMatch","_diff","netDiff","_percentageMatch","a","b","_percentageDiff","deepProps","isReplace","withSymbols","Error","valAtObj1","valAtObj2","getOwnPropertyDescriptor","netComparison","contrast","returnOnFirstFalse","contn","testPass","_isBoolean","_isNumber","isNaN","Array","isArray","_isTypeArray","_isTypeFunction","toString","_isClass","test","Function","_isEmpty","_getType","input","_all","method","_proxy","trap","trapByCommons","prop","Proxy","_isProxy","__proxyTargetByCommons","_getProxyTarget","instance","_getProxyTrap","__proxyTrapByCommons","_mixin","classes","Traps","Base","supersMap","Mixin","args","super","prototypes","_class","supers","this","supersReturnValues","supr","_instanceof","classB","mixinTest","classA","prevAns","constructor","arr","count","itm","firsts","reverse","_avg","_sum","_max","Math","max","_min","min","rand","floor","random","total","v","_slice","offset","lengthOrOffset2","_preceding","reference","rotate","lastReference","from","lastIndexOf","before","_following","after","_precedingLast","_followingLast","_between","reference2","rtl","to","_intersect","arr2","val1","val2","_difference","_filter","_divide","passes","failures","_flatten","withObjects","acc","_sort","order","_arr","index","sort","localeCompare","trim","toLowerCase","map","_unique","self","items","_concatUnique","arrs","_remove","limit","splice","_exclude","itms","replacements","_concatBefore","secondHalf","_concatAfter","_concatBeforeLast","_concatAfterLast","prevTest","_any","_inSequence","timing","sync","delay","delayAlways","Promise","resolve","reject","advance","setTimeout","ret","then","catch","Expr","jsenType","Super","comments","meta","vars","Interface","ExprInterface","Jsen","expr","Parsers","params","Static","parsers","grammars","varsScope","parsed","parse","_expr","_Parsers","ReferenceInterface","CallInterface","context","explain","console","log","AssignmentInterface","DeletionInterface","mutates","assert","Lexer","str","delims","options","$cache","lex","tokens","matches","$str","$options","blocks","$blocks","quotes","$quotes","$comments","runtime","nesting","maxDepth","matchesi","cache","_evalCharsAt","join","charWidth","commentTest","quoteTest","nestingTest","openComment","_testQuotes","openQuote","_testComments","ending","_push","chars","starting","preserveComments","_testNesting","stopChar","_testChars","stopChars","stopCharForward","substr","matchedDelim","preserveDelims","quote","block","match","RegExp","testList","useRegex","ci","splitSeries","regParse","_wrapped","subject","openingTag","closingTag","startsWith","endsWith","_unwrap","_after","_before","search","beforeLast","pos","afterLast","_afterLast","_toTitle","strict","replace","txt","charAt","toUpperCase","_toCamel","fromStart","_fromCamel","delimiter","split","_matches","lllll","Abstraction","AbstractionInterface","eval","parseCallback","Arr","ArrInterface","exprs","newExprs","exprA","uniqueSoFar","exprB","even","Arguments","ArgumentsInterface","list","arg","Assertion","AssertionInterface","logic","operators","isOr","or","isNor","nor","isAnd","and","isNand","nand","lastResult","trues","Assignment","operator","getEval","Contexts","Bool","BoolInterface","state","Call","_contexts","__contexts","cntxt","utils","handler","Num","Str","Obj","unshift","Comments","CommentsInterface","type","_comments","commentPlacement","splits","_beforeLast","line","commenta","Comparison","ComparisonInterface","operand1","operand2","compare","oper","allItemsMatch","entry1Keys","entry2Keys","allEntriesMatch","exact","is","isNull","equalsTo","notEqualsTo","relative","lesserThan","greaterThan","lesserThanOrEqualsTo","greaterThanOrEqualsTo","between","partial","contains","any","in","Condition","ConditionInterface","onTrue","onFalse","Deletion","red","del","Func","FuncInterface","paramters","statements","wrappings","parentParams","ownParams","nameInParent","nameInSelf","defaultValInParent","defaultValInSelf","sup","localContext","defaultVal","multipleContexts","headNoWrap","head","bodyNoWrap","body","arrowFunctionFormatting","funcHead","funcBody","param","paramSplit","MathInterface","currentTotal","sub","NumInterface","int","dec","parseInt","ObjInterface","entries","_entriesSplit","entry","Reference","backticks","sourceContext","parts","subjectContext","separator","nameSplit","isContext","Return","ReturnInterface","exprLc","Statements","StatementsInterface","stmts","delim","StrInterface","_closest","num","byKey","closest","abs","_fromWords","text","strtr","zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","thirty","forty","fourty","fifty","sixty","seventy","eighty","ninety","hundred","thousand","million","billion","tmp","sum","last","part","standardize","prefix","funcName","rename","Js","window","OnePhrase"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_isArray,\r\n\t_isBoolean,\r\n\t_isFunction,\r\n\t_isNumeric,\r\n\t_isObject,\r\n\t_isString,\r\n\t_isNull,\r\n\t_isTypeObject,\r\n\t_isObservable,\r\n\t_isUndefined,\r\n} from './Js.js';\r\nimport {\r\n\t_from as _arr_from,\r\n\t_first as _arr_first,\r\n\t_last as _arr_last,\r\n\t_pushUnique,\r\n\t_rand,\r\n} from './Arr.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n \r\n/**\r\n * Return an object for the given pair(s) of input.\r\n *\r\n * @param string|array \t\t\tkey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nconst _from = function(key, val = null) {\r\n\tvar obj = {};\r\n\tif (arguments.length === 2) {\r\n\t\tif (_isString(key)) {\r\n\t\t\tobj[key] = val;\r\n\t\t} else if (_isArray(key) && _isArray(val)) {\r\n\t\t\tkey.forEach((k, i) => obj[k] = val[i]);\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n \r\n/**\r\n * Return the input object with additional entries.\r\n *\r\n * @param object\t \t\t\tobj\r\n * @param string|array \t\t\tentriesOrKey\r\n * @param mixed|array\t\t\tval \r\n *\r\n * @return object\r\n */\r\nconst _with = function(obj, entriesOrKey, val = null) {\r\n\treturn _merge(obj, _isObject(entriesOrKey) ? entriesOrKey : _from(entriesOrKey, val));\r\n};\r\n \r\n/**\r\n * Loops thru obj flatly with a callback function.\r\n * Stops when callback returns a non-undefined value.\r\n *\r\n * @param array|object \t\t\tobj \t\t\tThe array or object to iterate.\r\n * @param function \t\t\t\tcallback \t\tThe callback function.\r\n *\r\n * @return mixed|null\t\t\tAny non-null return from callback\r\n */\r\nconst _each = function(obj, callback) {\r\n\tvar returnValue = undefined;\r\n\tif (_isTypeObject(obj)) {\r\n\t\tObject.keys(obj).forEach(k => {\r\n\t\t\tif (returnValue !== false) {\r\n\t\t\t\treturnValue = callback(_isNumeric(k) ? parseFloat(k) : k, obj[k]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\treturn returnValue;\r\n};\r\n\t\r\n/**\r\n * Retrieves the value at the given path.\r\n *\r\n * A return value of undefined is ambiguous, and can mean either that the\r\n * path does not exist, or that the path actually exists but with a value of undefined. If it is required to\r\n * know whether the path actually exists, pass an object as a third argument.\r\n * This object will have an \"exists\" key set to true/false\r\n *\r\n * @param object \t\t\t\tctxt\r\n * @param array \t\t\t\tpath\r\n * @param object \t\t\t\treciever\r\n * @param object \t\t\t\tdetectObservables\r\n *\r\n * @return mixed\r\n */\r\nconst _get = function(ctxt, path, reciever = {}, detectObservables = true) {\r\n\tpath = _arr_from(path).slice();\r\n\tvar _ctxt = ctxt;\r\n\twhile(!_isUndefined(_ctxt) && !_isNull(_ctxt) && path.length) {\r\n\t\tvar _key = path.shift();\r\n\t\tvar isObsvble = detectObservables && _isObservable(_ctxt);\r\n\t\tif (!(isObsvble ? _ctxt.has(_key) : (_key in _ctxt))) {\r\n\t\t\treciever.exists = false;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_ctxt = isObsvble ? _ctxt.get(_key) : _ctxt[_key];\r\n\t}\r\n\treciever.exists = true;\r\n\treturn _ctxt;\r\n};\r\n\t\r\n/**\r\n * Sets a value to the given path.\r\n *\r\n * @param object \t\t\t\tobj\r\n * @param array \t\t\t\tpath\r\n * @param mixed \t\t\t\tval\r\n * @param object|function \t\tbuildTree\r\n *\r\n * @return bool\r\n */\r\nconst _set = function(obj, path, val, buildTree = {}) {\r\n\tpath = _arr_from(path);\r\n\tvar target = obj;\r\n\tfor(var i = 0; i < path.length; i ++) {\r\n\t\tif (i < path.length - 1) {\r\n\t\t\tif (!_isTypeObject(target) && !_isFunction(target)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!_isTypeObject(target[path[i]])) {\r\n\t\t\t\tif (!buildTree) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\ttarget[path[i]] = _isFunction(buildTree) ? buildTree(i) : buildTree;\r\n\t\t\t}\r\n\t\t\ttarget = target[path[i]];\r\n\t\t} else {\r\n\t\t\ttarget[path[i]] = val;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n};\r\n\t\r\n/**\r\n * Unsets a value from the given path.\r\n *\r\n * @param object \t\t\t\tobj\r\n * @param array \t\t\t\tpath\r\n * @param bool|function \t\treduceTree\r\n *\r\n * @return bool\r\n */\r\nconst _unset = function(obj, path, reduceTree = false) {\r\n\tpath = _arr_from(path);\r\n\tvar success = false;\r\n\tdo {\r\n\t\tvar lastKey = path.pop();\r\n\t\tvar lastKey = lastKey === ''/*null*/ ? 0 : lastKey;\r\n\t\tvar _obj = obj;\r\n\t\tif (path.length) {\r\n\t\t\t_obj = _get(obj, path);\r\n\t\t}\r\n\t\tif ((_isTypeObject(_obj) || _isFunction(_obj)) && lastKey in _obj) {\r\n\t\t\tdelete _obj[lastKey];\r\n\t\t\tsuccess = true;\r\n\t\t}\r\n\t} while (success && reduceTree && path.length && (_isTypeObject(_obj) || _isFunction(_obj)) && !Object.keys(_obj).length);\r\n\treturn success;\r\n};\r\n\t\r\n/**\r\n * Tells if the given path exists.\r\n *\r\n * @param object \t\t\t\tobj\r\n * @param array \t\t\t\tpath\r\n *\r\n * @return bool\r\n */\r\nconst _isset = function(obj, path) {\r\n\tvar reciever = {};\r\n\t_get(obj, path, reciever);\r\n\treturn reciever.exists;\r\n};\r\n\r\n/**\r\n * Returns the FIRST ENTRY.\r\n *\r\n * @param array|object \tobj\r\n *\r\n * @return mixed\r\n */\r\nconst _first = function(obj) {\r\n\treturn _isArray(obj) ? _arr_first(obj) : obj[Object.keys(obj)[0]];\r\n};\r\n\r\n/**\r\n * Returns the LAST ENTRY.\r\n *\r\n * @param array|object \tobj\r\n *\r\n * @return mixed\r\n */\r\nconst _last = function(obj) {\r\n\treturn _isArray(obj) ? _arr_last(obj) : obj[_arr_last(Object.keys(obj))];\r\n};\r\n\r\n/**\r\n * Returns a random subset of object.\r\n *\r\n * @param array|object \tobj\r\n * @param int\t\t \tamount\r\n *\r\n * @return array|object\r\n */\r\nconst _sample = function(obj, amount = 1) {\r\n\treturn _isArray(obj) ? _rand(obj) : _copy(obj, _rand(Object.keys(obj), amount));\r\n};\r\n\r\n/**\r\n * Finds a value in an array/object and returns the key (or path when found deep).\r\n *\r\n * @param array}object \tobj\r\n * @param function\t\tcallback\r\n * @param bool\t\t\tdeep\r\n *\r\n * @return number|string|array\r\n */\r\nconst _find = function(obj, callback, deep = false) {\r\n\tvar keys = null;\r\n\tvar values = obj;\r\n\tif (!_isArray(obj)) {\r\n\t\tkeys = Object.keys(obj);\r\n\t\tvalues = Object.values(obj);\r\n\t}\r\n\tvar subKey = undefined;\r\n\tvar value = values.reduce((prev, curr) => {\r\n\t\tif (subKey === undefined) {\r\n\t\t\tif (callback(curr, prev)) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t\tif (deep && (_isTypeObject(curr) || _isFunction(curr)) && (subKey = _find(curr, callback, deep)) !== undefined) {\r\n\t\t\t\treturn curr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn prev;\r\n\t}, undefined);\r\n\tif (value !== undefined) {\r\n\t\tvar key = keys ? keys[values.indexOf(value)] : values.indexOf(value);\r\n\t\treturn subKey !== undefined ? [key].concat(_arr_from(subKey)) : key;\r\n\t}\r\n};\r\n\r\n/**\r\n * Eagerly retrieves object members all down the prototype chain.\r\n *\r\n * @param object\t \tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return array\r\n */\r\nconst _getAllPropertyNames = function(obj, until) {\r\n\tvar keysAll = [];\r\n\t_getPrototypeChain(obj, until).forEach(obj => {\r\n\t\t_pushUnique(keysAll, ...Object.getOwnPropertyNames(obj));\r\n\t});\r\n\treturn keysAll;\r\n};\r\n\r\n/**\r\n * Returns the prototype chain.\r\n *\r\n * @param object \t\tobj\r\n * @param object\t \tuntil\r\n *\r\n * @return bool\r\n */\r\nconst _getPrototypeChain = function(obj, until) {\r\n\tuntil = until || Object.prototype;\r\n\tuntil = until && !_isArray(until) ? [until] : until;\r\n\t// We get the chain of inheritance\r\n\tvar prototypalChain = [];\r\n\tvar obj = obj;\r\n\twhile((obj && (!until || until.indexOf(obj) < 0) && obj.name !== 'default')) {\r\n\t\tprototypalChain.push(obj);\r\n\t\tobj = obj ? Object.getPrototypeOf(obj) : null;\r\n\t}\r\n\treturn prototypalChain;\r\n};\r\n\r\n/**\r\n * Copies only properties of an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tonly\r\n * @param array\t\t \texcept\r\n *\r\n * @return object\r\n */\r\nconst _copyPlain = function(obj, filter = []) {\r\n\treturn _mergeCallback([{}, obj], (key, obj1, obj2) => {\r\n\t\tif (!_isFunction(obj2[key])) {\r\n\t\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t\t}\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n\r\n/**\r\n * Copies an object.\r\n *\r\n * @param object\t \tobj\r\n * @param array\t\t \tfilter\r\n *\r\n * @return object\r\n */\r\nconst _copy = function(obj, filter = []) {\r\n\tvar depth = 0;\r\n\tif (_isNumeric(arguments[0]) && _isTypeObject(arguments[1])) {\r\n\t\tdepth = arguments[0];\r\n\t\tobj = arguments[1];\r\n\t\tfilter = arguments[2] || [];\r\n\t}\r\n\treturn _mergeCallback([depth, {}, obj], (key, obj1, obj2) => {\r\n\t\treturn _isFunction(filter) ? filter(key) \r\n\t\t\t: (_isArray(filter) && filter.length ? filter.indexOf(key) > -1 : true);\r\n\t}, false/*deepProps*/, false/*isReplace*/, false/*withSymbols*/);\r\n};\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nconst _merge = function(...objs) {\r\n\treturn _mergeCallback(objs, (k, obj1, obj2) => {\r\n\t\treturn true;\r\n\t});\r\n};\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects into first array/object but only when not set;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nconst _inherit = function(...objs) {\r\n\treturn _mergeCallback(objs, (key, obj1, obj2) => {\r\n\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\tif (obj1.indexOf(obj2[key]) === -1) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else if (!(key in obj1)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/**\r\n  * Replaces properties of first array/object with values from subsequent arrays/objects;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nconst _replace = function(...objs) {\r\n\tvar replaceIntoEmptyObj = Object.keys(objs[0]).length === 0;\r\n\treturn _mergeCallback(objs, (key, obj1, obj2, i) => {\r\n\t\tif ((key in obj1) || (replaceIntoEmptyObj && i === 0)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}, false/*deepProps*/, true/*isReplace*/);\r\n};\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n * @param int\t\t\t\tdepth\r\n *\r\n * @return bool\r\n */\r\nconst _even = function(obj1, obj2, assertion = true, depth = 1) {\r\n\tif ((_isArray(obj1) && _isArray(obj2) && obj1.length !== obj2.length)\r\n\t|| (_isObject(obj1) && _isObject(obj2) && Object.keys(obj1).length !== Object.keys(obj2).length)) {\r\n\t\treturn false;\r\n\t}\r\n\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\tif (depth > 0 && ((_isArray(v1) && _isArray(v2)) || (_isObject(v1) && _isObject(v2)))) {\r\n\t\t\treturn _even(v1, v2, assertion, depth - 1);\r\n\t\t}\r\n\t\treturn _isFunction(assertion) ? assertion(v1, v2) : (v1 === v2) === assertion;\r\n\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\treturn _isArray(result) ? result.length === obj1.length\r\n\t\t: (_isObject(result) ? Object.keys(result).length === Object.keys(obj1).length : result);\r\n};\r\n\r\n/**\r\n * Gets the match(es) between (members of) two objects;\r\n * optionally with custom assertion.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetMatch\r\n *\r\n * @return object|undefined\r\n */\r\nconst _match = function(obj1, obj2, assertion = true, netMatch = true) {\r\n\treturn _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\tif ((_isArray(v1) && _isArray(v2)) || (_isObject(v1) && _isObject(v2))) {\r\n\t\t\treturn _match(v1, v2, assertion, netMatch);\r\n\t\t}\r\n\t\treturn _isFunction(assertion) ? assertion(v1, v2) : (v1 === v2) === assertion;\r\n\t}, netMatch/*netComparison*/);\r\n};\r\n\r\n/**\r\n * Gets the difference(s) between (members of) two objects;\r\n * optionally with custom assertion.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetDiff\r\n *\r\n * @return object|undefined\r\n */\r\nconst _diff = function(obj1, obj2, assertion = true, netDiff = true) {\r\n\treturn _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\tif ((_isArray(v1) && _isArray(v2)) || (_isObject(v1) && _isObject(v2))) {\r\n\t\t\treturn _diff(v1, v2, assertion, netDiff);\r\n\t\t}\r\n\t\treturn _isFunction(assertion) ? assertion(v1, v2) : (v1 === v2) === assertion;\r\n\t}, netDiff/*netComparison*/, true/*contrast*/);\r\n};\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n *\r\n * @return bool\r\n */\r\nconst _percentageMatch = function(obj1, obj2, assertion = true) {\r\n\tvar result = _compareCallback(obj1, obj2, (v1, v2) => {\r\n\t\tif ((_isArray(v1) && _isArray(v2)) || (_isObject(v1) && _isObject(v2))) {\r\n\t\t\treturn _percentageMatch(v1, v2, assertion);\r\n\t\t}\r\n\t\treturn (_isFunction(assertion) ? assertion(v1, v2) : (v1 === v2) === assertion) ? 1 : 0;\r\n\t}, false/*netComparison*/, false/*contrast*/, true/*returnOnFirstFalse*/);\r\n\tvar values = _isObject(result) ? Object.values(result) : result;\r\n\treturn values.reduce((a, b) => a + b, 0) / values.length;\r\n};\r\n\r\n/**\r\n * Asserts (members of) the first value against (members of) subsequent values.\r\n * Assertion could be TRUE, FALSE, or custom.\r\n *\r\n * @param mixed \t\t\tobj1\r\n * @param mixed \t\t\tobj2\r\n * @param bool|function\t\tassertion\r\n *\r\n * @return bool\r\n */\r\nconst _percentageDiff = function(obj1, obj2, assertion = false) {\r\n\treturn 1 - _percentageMatch(obj1, obj2, assertion);\r\n};\r\n\r\n/**\r\n  * Merges values from subsequent arrays/objects first array/object;\r\n  * optionally recursive\r\n  *\r\n  * @param array ...objs\r\n  *\r\n  * @return void\r\n  */\r\nconst _mergeCallback = function(objs, callback, deepProps = false, isReplace = false, withSymbols = false) {\r\n\tvar depth = 0;\r\n\tvar obj1 = objs.shift();\r\n\tif (_isNumeric(obj1) || obj1 === true || obj1 === false) {\r\n\t\tdepth = obj1;\r\n\t\tobj1 = objs.shift();\r\n\t}\r\n\tif (!objs.length) {\r\n\t\tthrow new Error('_merge() requires two or more array/objects.');\r\n\t}\r\n\tobjs.forEach((obj2, i) => {\r\n\t\tif (!_isTypeObject(obj2) && !_isFunction(obj2)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t(deepProps ? _getAllPropertyNames(obj2) : Object.getOwnPropertyNames(obj2)).forEach(key => {\r\n\t\t\tvar valAtObj1 = obj1[key];\r\n\t\t\tvar valAtObj2 = obj2[key];\r\n\t\t\tif (((_isArray(valAtObj1) && _isArray(valAtObj2)) || (_isObject(valAtObj1) && _isObject(valAtObj2))) \r\n\t\t\t&& (depth === true || depth > 0)) {\r\n\t\t\t\t// RECURSE...\r\n\t\t\t\tobj1[key] = _isArray(valAtObj1) && _isArray(valAtObj2) ? [] : {};\r\n\t\t\t\t_mergeCallback([_isNumeric(depth) ? depth - 1 : depth, obj1[key], valAtObj1, valAtObj2], callback, deepProps, isReplace);\r\n\t\t\t} else if (callback(key, obj1, obj2, i)) {\r\n\t\t\t\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\t\t\t\tif (isReplace) {\r\n\t\t\t\t\t\tobj1[key] = valAtObj2;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobj1.push(valAtObj2);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (withSymbols) {\r\n\t\t\t\t\tObject.defineProperty(obj1, key, Object.getOwnPropertyDescriptor(obj2, key));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobj1[key] = obj2[key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\treturn obj1;\r\n};\r\n\r\n/**\r\n * Gets the match(es) between (members of) two values;\r\n * assertion optionally custom.\r\n *\r\n * @param mixed \t\t\tob1\r\n * @param mixed \t\t\tobj2\r\n * @param string|function\tassertion\r\n * @param bool\t\t\t\tnetComparison\r\n * @param bool\t\t\t\tcontrast\r\n * @param bool\t\t\t\treturnOnFirstFalse\r\n *\r\n * @return bool|array|object\r\n */\r\nconst _compareCallback = function(obj1, obj2, assertion = true, netComparison = true, contrast = false, returnOnFirstFalse = false) {\r\n\tif (_isArray(obj1) && _isArray(obj2)) {\r\n\t\tvar result = [];\r\n\t\tvar contn = true;\r\n\t\tobj1.forEach(v1 => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = false;\r\n\t\t\t_each(obj2, (k, v2) => {\r\n\t\t\t\tif (!testPass || (netComparison && _isTypeObject(v1))) {\r\n\t\t\t\t\ttestPass = assertion(v1, v2);\r\n\t\t\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\t\t\ttestPass = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (_isTypeObject(testPass) && netComparison) {\r\n\t\t\t\t\t\t// Further recursions should use this testPass as v1\r\n\t\t\t\t\t\tv1 = testPass;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult.push(netComparison ? testPass : v1);\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult.push(testPass);\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult.push(v1);\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tif (_isObject(obj1) && _isObject(obj2)) {\r\n\t\tvar result = {};\r\n\t\tvar contn = true;\r\n\t\tObject.keys(obj1).forEach(k => {\r\n\t\t\tif (!contn) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar testPass = assertion(obj1[k], obj2[k]);;\r\n\t\t\tif ((_isArray(testPass) && !testPass.length) || (_isObject(testPass) && !Object.keys(testPass).length)) {\r\n\t\t\t\ttestPass = false;\r\n\t\t\t}\r\n\t\t\tif (_isTypeObject(testPass)) {\r\n\t\t\t\tresult[k] = netComparison ? testPass : obj1[k];\r\n\t\t\t} else if (!_isBoolean(testPass)) {\r\n\t\t\t\tresult[k] = testPass;\r\n\t\t\t} else if ((contrast && !testPass) || (!contrast && testPass)) {\r\n\t\t\t\tresult[k] = obj1[k];\r\n\t\t\t} else if (returnOnFirstFalse) {\r\n\t\t\t\tcontn = false;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\t_from,\r\n\t_with,\r\n\t_each,\r\n\t_get,\r\n\t_set,\r\n\t_unset,\r\n\t_isset,\r\n\t_first,\r\n\t_last,\r\n\t_sample,\r\n\t_find,\r\n\t_getAllPropertyNames,\r\n\t_getPrototypeChain,\r\n\t_copyPlain,\r\n\t_copy,\r\n\t_merge,\r\n\t_inherit,\r\n\t_replace,\r\n\t_even,\r\n\t_match,\r\n\t_diff,\r\n\t_percentageMatch,\r\n\t_percentageDiff,\r\n\t_mergeCallback,\r\n\t_compareCallback,\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_all,\r\n\t_last,\r\n\t_slice\r\n} from './Arr.js';\r\nimport {\r\n\t_each,\r\n\t_merge,\r\n\t_mergeCallback\r\n} from './Obj.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Typechecks and other utils\r\n * ---------------------------\r\n */\r\n \r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isString = function(val) {\r\n\treturn typeof val === 'string';\r\n};\r\n \r\n/**\r\n * Tells if val is of type \"number\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isNumber = function(val) {\r\n\treturn typeof val === 'number';\r\n};\r\n \r\n/**\r\n * Tells if val is of type \"string\" or a numeric string.\r\n * This holds true for both numbers and numeric strings.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isNumeric = function(val) {\r\n\treturn val !== true && val !== false && val !== null && val !== '' && !isNaN(val * 1);\r\n};\r\n\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isArray = function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isTypeArray = function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isObject = function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isTypeObject = function(val) {\r\n\treturn Array.isArray(val) || typeof val === 'object';\r\n};\r\n \r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nconst _isFunction = function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isTypeFunction = function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n \r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nconst _isClass = function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s/.test(Function.prototype.toString.call(val));\r\n};\r\n \r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isUndefined = function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n \r\n/**\r\n * Tells if val is undefined or is of type \"boolean\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isBoolean = function(val) {\r\n\treturn val === true || val === false;\r\n};\r\n \r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isNull = function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n \r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nconst _isEmpty = function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n \r\n/**\r\n * Returns the val's type.\r\n *\r\n * @param string \tval\r\n *\r\n * @return string\r\n */\r\nconst _getType = function(val) {\r\n\treturn typeof val;\r\n};\r\n\r\n/**\r\n * Tells if a given object has observability methods.\r\n *\r\n * @param mixed\t\tinput\r\n *\r\n * @return bool\r\n */\r\nconst _isObservable = function(input) {\r\n\treturn _isObject(input) && _all([\r\n\t\t'observe',\r\n\t\t'unobserve',\r\n\t\t'setOffsetParent',\r\n\t\t'getOffsetParent',\r\n\t], method => _isFunction(input[method]));\r\n};\r\n\r\n/**\r\n * Creats a proxy and keeps special reference to it.\r\n *\r\n * @param object\t target\r\n * @param object\t trap\r\n *\r\n * @return Proxy\r\n */\r\nconst _proxy = function(target, trap) {\r\n\tvar trapByCommons = {\r\n\t\tget: (target, prop) => {\r\n\t\t\tif (prop === '__proxyTargetByCommons') {\r\n\t\t\t\treturn target;\r\n\t\t\t}\r\n\t\t\tif (prop === '__proxyTrapByCommons') {\r\n\t\t\t\treturn trap;\r\n\t\t\t}\r\n\t\t\treturn trap.get ? trap.get(target, prop) : target[prop];\r\n\t\t},\r\n\t};\r\n\treturn new Proxy(target, _merge({}, trap, trapByCommons));\r\n};\r\n\r\n/**\r\n * Tells if a given object instance has been proxied.\r\n *\r\n * @param mixed\t\tinput\r\n *\r\n * @return bool\r\n */\r\nconst _isProxy = function(input) {\r\n\treturn (_isObject(input) && input.__proxyTargetByCommons) || false;\r\n};\r\n\r\n/**\r\n * Returns the proxy's target object as earlier saved.\r\n *\r\n * @param mixed\t\tproxy\r\n *\r\n * @return mixed\r\n */\r\nconst _getProxyTarget = function(instance) {\r\n\treturn _isProxy(instance) ? instance.__proxyTargetByCommons : undefined;\r\n};\r\n\r\n/**\r\n * Returns the proxy's trap object as earlier saved.\r\n *\r\n * @param mixed\t\tproxy\r\n *\r\n * @return mixed\r\n */\r\nconst _getProxyTrap = function(instance) {\r\n\treturn _isProxy(instance) ? instance.__proxyTrapByCommons : undefined;\r\n};\r\n\r\n/**\r\n * A multi-inheritance implementstion.\r\n *\r\n * @param array\t \t...classes\r\n *\r\n * @return object\r\n */\r\nconst _mixin = function(...classes) {\r\n\tvar Traps = {};\r\n\tvar RetrnDirective = 'last';\r\n\tif (_isArray(arguments[0])) {\r\n\t\tclasses = arguments[0];\r\n\t\tTraps = arguments[1];\r\n\t\tif (arguments[2]) {\r\n\t\t\tRetrnDirective = arguments[2];\r\n\t\t}\r\n\t}\r\n\tvar Base = _last(classes);\r\n\tvar supersMap = {};\r\n\tvar Mixin = class extends Base {\r\n\t\tconstructor(...args) {\r\n\t\t\tsuper(...args);\r\n\t\t}\r\n\t};\r\n\t// A trap for _instanceof()\r\n\tMixin.prototypes = classes;\r\n\t// ---------------------\r\n\t// Extend (merge) properties but keep methods\r\n\tclasses.forEach(_class => {\r\n\t\t// Copy const members\r\n\t\t_mergeCallback([Mixin, _class], (key, obj1, obj2) => ['name', 'prototype', 'prototypes', 'length'].indexOf(key) === -1);\r\n\t\t_mergeCallback([Mixin.prototype, _class.prototype], (key, obj1, obj2) => {\r\n\t\t\tif (['prototype', 'prototypes'].indexOf(key) === -1) {\r\n\t\t\t\tif (_isFunction(obj2[key])) {\r\n\t\t\t\t\tif (_isArray(supersMap[key])) {\r\n\t\t\t\t\t\tsupersMap[key].push(obj2[key]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsupersMap[key] = [obj2[key]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}, true/*deepProps*/);\r\n\t});\r\n\t// Extend (proxy) methods\r\n\t_each(supersMap, (name, supers) => {\r\n\t\tif (name === 'constructor') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// NOTE: this must not be defined as an arrow function\r\n\t\t// for the benefit of the \"this\".\r\n\t\tMixin.prototype[name] = function(...args) {\r\n\t\t\tif (Object.hasOwnProperty(Traps, name) && _isFunction(Traps[name])) {\r\n\t\t\t\t// Wrap a call to the trap...\r\n\t\t\t\t// So mixin supers are passed to traps\r\n\t\t\t\treturn Traps[name].call(this, supers, ...args);\r\n\t\t\t} else {\r\n\t\t\t\t// Call each super and return\r\n\t\t\t\t// the last one's return value\r\n\t\t\t\tvar supersReturnValues = [];\r\n\t\t\t\tsupers.forEach(supr => {\r\n\t\t\t\t\tsupersReturnValues.push(supr.call(this, ...args));\r\n\t\t\t\t})\r\n\t\t\t\treturn _last(supersReturnValues);\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n\treturn Mixin;\r\n};\r\n\r\n/**\r\n * Instanceof that supports our multi-inheritance implementstion.\r\n *\r\n * @param object\t \tobj1\r\n * @param object\t \tclassB\r\n *\r\n * @return bool\r\n */\r\nconst _instanceof = function(obj, classB) {\r\n\tif (!obj) {\r\n\t\treturn false;\r\n\t}\r\n\tif (obj instanceof classB) {\r\n\t\treturn true;\r\n\t}\r\n\tvar mixinTest = classA => {\r\n\t\twhile (classA && classA !== Function.prototype) {\r\n\t\t\tif (classA === classB || (classA.prototypes && classA.prototypes.reduce((prevAns, prototype) => prevAns || (prototype === classB) || mixinTest(prototype), false))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tclassA = Object.getPrototypeOf(classA);\r\n\t\t}\r\n\t\treturn false;\r\n\t};\r\n\treturn mixinTest(obj.constructor);\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\t_isString,\r\n\t_isNumber,\r\n\t_isNumeric,\r\n\t_isArray,\r\n\t_isTypeArray,\r\n\t_isObject,\r\n\t_isTypeObject,\r\n\t_isFunction,\r\n\t_isTypeFunction,\r\n\t_isClass,\r\n\t_isUndefined,\r\n\t_isBoolean,\r\n\t_isNull,\r\n\t_isEmpty,\r\n\t_getType,\r\n\t_isObservable,\r\n\t_isProxy,\r\n\t_getProxyTarget,\r\n\t_getProxyTrap,\r\n\t_proxy,\r\n\t_mixin,\r\n\t_instanceof\r\n};","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_isArray,\r\n\t_isBoolean,\r\n\t_isEmpty,\r\n\t_isNumber,\r\n\t_isNumeric,\r\n\t_isObject,\r\n\t_isString,\r\n\t_isTypeArray,\r\n\t_isUndefined\r\n} from './Js.js';\r\nimport {\r\n\t_each\r\n} from './Obj.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n *\r\n * @return array\r\n */\r\nconst _from = function(val) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n\r\n/**\r\n * Returns THE FIRST ENTRY OR A NUMBER OF ENTRIES counting forward from the begining.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nconst _first = function(arr, amount = 1) {\r\n\tvar count = 0;\r\n\tarr.forEach(itm => {\r\n\t\tcount ++;\r\n\t});\r\n\tvar firsts = arr.slice(arr.length - count, amount);\r\n\treturn arguments.length > 1 ? firsts : firsts[0];\r\n};\r\n\r\n/**\r\n * Returns THE LAST ENTRY OR A NUMBER OF ENTRIES counting forward to the end.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nconst _last = function(arr, amount = 1) {\r\n\treturn arguments.length > 1\r\n\t\t? _first(arr.slice().reverse(), amount).reverse()\r\n\t\t: _first(arr.slice().reverse());\r\n};\r\n\r\n/**\r\n * Gets the average of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nconst _avg = function(arr) {\r\n\treturn arr.length ? _sum(arr) / arr.length : 0;\r\n};\r\n\r\n/**\r\n * Gets the maximum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nconst _max = function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.max(v1, v2), arr.shift());\r\n};\r\n\r\n/**\r\n * Gets the minimum of an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nconst _min = function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((v1, v2) => Math.min(v1, v2), arr.shift());\r\n};\r\n\r\n/**\r\n * Gets one or more random values from an array.\r\n *\r\n * @param array \tarr\r\n * @param int\t \tamount\r\n *\r\n * @return mixed|array\r\n */\r\nconst _rand = function(arr, amount = 1) {\r\n\tvar result = [];\r\n\tvar rand = null;\r\n\twhile (result.length < amount && (rand = arr[Math.floor(Math.random() * arr.length)]) && result.indexOf(rand) === -1) {\r\n\t\tresult.push(rand);\r\n\t};\r\n\treturn arguments.length > 1 ? result : result[0];\r\n};\r\n\r\n/**\r\n * Sums an array of numbers.\r\n *\r\n * @param array \tarr\r\n *\r\n * @return number\r\n */\r\nconst _sum = function(arr) {\r\n\tarr = arr.slice();\r\n\treturn arr.reduce((total, v) => total + v, arr.shift());\r\n};\r\n\r\n/**\r\n * Array slicing with support for negative offsets.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n * @param array\t \t\t\t\toffset\r\n * @param array\t \t\t\t\tlengthOrOffset2\r\n *\t *\r\n * @return array\r\n */\r\nconst _slice = function(arr, offset = 0, lengthOrOffset2 = null) {\r\n\tif (arguments.length > 1) {\r\n\t\toffset = offset < 0 ? (arr.length + offset)/*subtraction eventually*/ : offset;\r\n\t\tif (arguments.length > 2) {\r\n\t\t\tlengthOrOffset2 = lengthOrOffset2 < 0 ? (arr.length + lengthOrOffset2)/*subtraction eventually*/ - offset : lengthOrOffset2;\r\n\t\t};\r\n\t};\r\n\treturn arr.slice(offset, lengthOrOffset2);\r\n};\r\n\r\n/**\r\n * 1. Returns the ENTRY preceding (either the FIRST or the LAST instance of) the reference.\r\n * 2. Returns A NUMBER OF ENTRIES counting backwards from (either the FIRST or the LAST instance of) the given reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param int|bool \tlength\r\n * @param bool\t \trotate\r\n * @param bool\t \tlastReference\r\n *\r\n * @return mixed|array\r\n */\r\nconst _preceding = function(arr, reference, length = false, rotate = false, lastReference = false) {\r\n\tif (arr.indexOf(reference) === -1) {\r\n\t\treturn length ? [] : undefined;\r\n\t}\r\n\tvar amount = length === true ? arr.length - 1 : (length === false ? 1 : length);\r\n\tvar arr = arr.slice().reverse();\r\n\tvar from = lastReference ? arr.lastIndexOf(reference) + 1 : arr.indexOf(reference) + 1;\r\n\tvar before = !_isUndefined(reference) ? arr.slice(from, from + amount) : [];\r\n\tif (rotate && before.length < amount && before.length < arr.length) {\r\n\t\tbefore = before.concat(arr.slice(0, amount - before.length));\r\n\t};\r\n\treturn length ? before : before[0];\r\n};\r\n\t\r\n/**\r\n * 1. Returns the ENTRY following (either the FIRST or the LAST instance of) the reference.\r\n * 2. Returns A NUMBER OF ENTRIES counting forwards from (either the FIRST or the LAST instance of) the given reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param int|bool \tlength\r\n * @param bool\t \trotate\r\n * @param bool\t \tlastReference\r\n *\r\n * @return mixed|array\r\n */\r\nconst _following = function(arr, reference, length = false, rotate = false, lastReference = false) {\r\n\tif (arr.indexOf(reference) === -1) {\r\n\t\treturn length ? [] : undefined;\r\n\t}\r\n\tvar amount = length === true ? arr.length - 1 : (length === false ? 1 : length);\r\n\tvar from = lastReference ? arr.lastIndexOf(reference) + 1 : arr.indexOf(reference) + 1;\r\n\tvar after = !_isUndefined(reference) ? arr.slice(from, from + amount) : [];\r\n\tif (rotate && after.length < amount && after.length < arr.length) {\r\n\t\tafter = after.concat(arr.slice(0, amount - after.length));\r\n\t};\r\n\treturn length ? after : after[0];\r\n};\r\n\r\n/**\r\n * Alias of _preceding() but uses last instance of reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param int|bool \tlength\r\n * @param bool\t \trotate\r\n *\r\n * @return mixed|array\r\n */\r\nconst _precedingLast = function(arr, reference, length = false, rotate = false) {\r\n\treturn _preceding(arr, reference, length, rotate, true/*lastReference*/);\r\n};\r\n\r\n/**\r\n * Alias of _following() but uses last instance of reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param int|bool \tlength\r\n * @param bool\t \trotate\r\n *\r\n * @return mixed|array\r\n */\r\nconst _followingLast = function(arr, reference, length = false, rotate = false) {\r\n\treturn _following(arr, reference, length, rotate, true/*lastReference*/);\r\n};\r\n\r\n/**\r\n * Returns ALL THE ENTRIES from (either the FIRST or the LAST instance of) the given reference UNTIL reference2,\r\n * in ltr/rtl direction.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param mixed\t \treference2\r\n * @param bool\t \trtl\r\n * @param bool\t \trotate\r\n * @param bool\t \tlastReference\r\n *\r\n * @return array\r\n */\r\nconst _between = function(arr, reference, reference2, rtl = false, rotate = false, lastReference = false) {\r\n\tvar from = lastReference ? arr.lastIndexOf(reference) : arr.indexOf(reference);\r\n\tvar to = lastReference ? arr.lastIndexOf(reference2) : arr.indexOf(reference2);\r\n\tif (rtl) {\r\n\t\tvar length = to > from \r\n\t\t\t? from/*the begining backward*/ + arr.length - to/*the other half*/\r\n\t\t\t: from - to;\r\n\t\treturn _preceding(arr, reference, length, rotate, lastReference);\r\n\t};\r\n\tvar length = to < from \r\n\t\t? arr.length - from - 1/*the remainder forward*/ + to + 1/*the other half*/\r\n\t\t: to - from;\r\n\treturn _following(arr, reference, length, rotate, lastReference);\r\n};\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nconst _intersect = function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n\r\n/**\r\n * Returns the difference of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nconst _difference = function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) === -1\r\n\t);\r\n};\r\n\r\n/**\r\n * Returns a list of items that pass a callback test.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n * @param function\t\t\t\tcallback\r\n *\t *\r\n * @return array\r\n */\r\nconst _filter = function(arr, callback) {\r\n\treturn _divide(arr, callback)[0];\r\n};\r\n\r\n/**\r\n * Makes a separation between items that pass a callback test and those that fail.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n * @param function\t\t\t\tcallback\r\n *\t *\r\n * @return array\r\n */\r\nconst _divide = function(arr, callback) {\r\n\tvar passes = [];\r\n\tvar failures = [];\r\n\tvar length = arr.length;\r\n\tfor (i = 0; i < length; i++) {\r\n\t\tif (callback(arr[i])) {\r\n\t\t\tpasses.push(arr[i]);\r\n\t\t} else {\r\n\t\t\tfailures.push(arr[i]);\r\n\t\t};\r\n\t};\r\n\treturn [passes, failures];\r\n};\r\n\r\n/**\r\n * Flattens a nested array to the given depth.\r\n *\r\n * @param array \tarr\r\n * @param int \t \tdepth\r\n * @param bool \t \twithObjects\r\n *\r\n * @return array\r\n */\r\nconst _flatten = function(arr, depth = 1, withObjects = true) {\r\n\tif (!_isNumeric(depth) || depth <= 0) {\r\n\t\treturn arr;\r\n\t};\r\n\tif (!_isArray(arr) && _isObject(arr) && withObjects) {\r\n\t\tarr = Object.values(arr);\r\n\t};\r\n\tif (!_isArray(arr)) {\r\n\t\treturn arr;\r\n\t};\r\n\treturn arr.reduce((acc, val) => _isArray(val) || (_isObject(val) && withObjects) \r\n\t\t? acc.concat(_flatten(!_isArray(val) ? Object.values(val) : val, depth - 1, withObjects)) \r\n\t\t: acc.concat(val), []);\r\n};\r\n\r\n/**\r\n * Sorts a list performantly.\r\n *\r\n * @param array\t \t\t\t\t\tarr\r\n * @param string\t \t\t\t\torder\t\t\tASC|DESC \r\n * @param function\t\t\t\t\tcallback\r\n *\r\n * @return array\r\n */\r\nconst _sort = function(arr, order, callback = null) {\r\n\tvar _arr = [];\r\n\t// Make a shallow copy\r\n\tvar length = arr.length;\r\n\tfor (var i = 0; i < length; i ++) {\r\n\t\t_arr.push({index: i, value: callback ? callback(arr[i]) : arr[i]});\r\n\t};\r\n\t_arr.sort(function(a, b) {\r\n\t\t// Using localeCompare if possible\r\n\t\tif (_isString(a.value) && \"\".localeCompare) {\r\n\t\t\treturn a.value.localeCompare(b.value);\r\n\t\t};\r\n\t\treturn a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\r\n\t});\r\n\tif ((order || '').trim().toLowerCase() === 'desc') {\r\n\t\t_arr = _arr.reverse();\r\n\t};\r\n\t// Fill the order with actual values\r\n\treturn _arr.map(itm => arr[itm.index]);\r\n};\r\n\r\n/**\r\n * Returns a list of unique items.\r\n *\r\n * @param array\t \t\t\t\tarr\r\n *\t *\r\n * @return array\r\n */\r\nconst _unique = function(arr) {\r\n\tconst distinct = (value, index, self) => {\r\n\t\treturn self.indexOf(value) === index;\r\n\t};\r\n\treturn arr.filter(distinct);\r\n};\r\n\r\n/**\r\n * Adds an item if not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...itms\r\n *\r\n * @return array\r\n */\r\nconst _pushUnique = function(arr, ...items) {\r\n\titems.forEach(itm => {\r\n\t\tif (arr.indexOf(itm) < 0) {\r\n\t\t\tarr.push(itm);\r\n\t\t}\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Adds items that do not already exist.\r\n *\r\n * @param array \tarr\r\n * @param array\t \t...arrs\r\n *\r\n * @return array\r\n */\r\nconst _concatUnique = function(arr, ...arrs) {\r\n\tarrs.forEach(_arr => {\r\n\t\t_arr.forEach(itm => _pushUnique(arr, ..._from(_arr)));\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Removes instances of reference up to <limit> times.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \titm\r\n * @param int|bool \tlimit\r\n *\r\n * @return array\r\n */\r\nconst _remove = function(arr, itm, limit = false) {\r\n\tvar i = arr.indexOf(itm);\r\n\twhile (i > -1 && (limit || limit === false)) {\r\n\t\tarr.splice(i, 1);\r\n\t\tif (limit > 0) {\r\n\t\t\tlimit --;\r\n\t\t};\r\n\t\ti = arr.indexOf(itm);\r\n\t};\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Removes all instances of each item.\r\n *\r\n * @param array \tarr\r\n * @param array\t \titms\r\n *\r\n * @return array\r\n */\r\nconst _exclude = function(arr, ...itms) {\r\n\titms.forEach(itm => _remove(arr, itm));\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Removes an item.\r\n *\r\n * @param array \tarr\r\n * @param array\t \titms\r\n * @param array\t \treplacements\r\n *\r\n * @return array\r\n */\r\nconst _replace = function(arr, itms, replacements = []) {\r\n\tif (arguments.length === 2) {\r\n\t\titms.forEach((itm, i) => {arr[i] = itm;});\r\n\t\treturn arr;\r\n\t};\r\n\t_each(itms, (k, reference) => {\r\n\t\tvar i = arr.indexOf(reference);\r\n\t\tif (i !== -1) {\r\n\t\t\tarr[i] = replacements[k];\r\n\t\t};\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Adds A LIST OF ITEMS before the FIRST instance of the given reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param array\t \titms\r\n * @param bool\t \tlastReference\r\n *\r\n * @return array\r\n */\r\nconst _concatBefore = function(arr, reference, itms, lastReference = false) {\r\n\tvar secondHalf = arr.splice(lastReference ? arr.lastIndexOf(reference) : arr.indexOf(reference));\r\n\titms.concat(secondHalf).forEach(function(itm) {\r\n\t\tarr.push(itm);\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Adds A LIST OF ITEMS after the FIRST instance of the given reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param array\t \titms\r\n * @param bool\t \tlastReference\r\n *\r\n * @return array\r\n */\r\nconst _concatAfter = function(arr, reference, itms, lastReference = false) {\r\n\tvar secondHalf = arr.splice(lastReference ? arr.lastIndexOf(reference) + 1 : arr.indexOf(reference) + 1);\r\n\titms.concat(secondHalf).forEach(function(itm) {\r\n\t\tarr.push(itm);\r\n\t});\r\n\treturn arr;\r\n};\r\n\r\n/**\r\n * Adds A LIST OF ITEMS before the LAST instance of the given reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param array\t \titms\r\n *\r\n * @return array\r\n */\r\nconst _concatBeforeLast = function(arr, reference, itms) {\r\n\treturn _concatBefore(arr, reference, itms, true/*lastReference*/);\r\n};\r\n\r\n/**\r\n * Adds A LIST OF ITEMS after the LAST instance of the given reference.\r\n *\r\n * @param array \tarr\r\n * @param mixed\t \treference\r\n * @param array\t \titms\r\n *\r\n * @return array\r\n */\r\nconst _concatAfterLast = function(arr, reference, itms) {\r\n\treturn _concatAfter(arr, itms, reference, true/*lastReference*/);\r\n};\r\n\r\n/**\r\n * Tells if ALL items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nconst _all = function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm) => prevTest && callback(itm), true);\r\n};\r\n\r\n/**\r\n * Tells if ANY items pass the test.\r\n *\r\n * @param array \tarr\r\n * @param function \tcallback\r\n *\r\n * @return bool\r\n */\r\nconst _any = function(arr, callback) {\r\n\treturn arr.reduce((prevTest, itm) => prevTest || callback(itm), false);\r\n};\r\n\r\n/**\r\n * Calls callback with each item in the list and waits inbetween for each callback's promise to resolve.\r\n * The delay parameter may be used solely as the wait or as an addition to the promise-based wait.\r\n *\r\n * @param int|string|object \tinterval\r\n *\r\n * @return new Promise\r\n */\r\nconst _inSequence = function(arr, callback, timing) {\r\n\tif (!_isArray(arr)) {\r\n\t\treturn;\r\n\t};\r\n\tif (_isObject(timing)) {\r\n\t\tvar sync = timing.sync || false;\r\n\t\tvar delay = timing.delay || 0;\r\n\t\tvar delayAlways = timing.delayAlways || false;\r\n\t} else {\r\n\t\tvar sync = _isBoolean(timing) || timing === 'last' ? timing : false;\r\n\t\tvar delay = _isNumber(timing) ? timing : 0;\r\n\t\tvar delayAlways = false;\r\n\t};\r\n\tvar items = arr;\r\n\tvar promise = new Promise(function(resolve, reject) {\r\n\t\tif (items.length) {\r\n\t\t\tvar call = function(i) {\r\n\t\t\t\tvar advance = () => {\r\n\t\t\t\t\t// Delay first before asking items.length\r\n\t\t\t\t\t// Good for progressivly adding new items\r\n\t\t\t\t\t// -----------------------\r\n\t\t\t\t\tif (delayAlways) {\r\n\t\t\t\t\t\tif (delay) {\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tif (items.length > i + 1) {\r\n\t\t\t\t\t\t\t\t\tcall(i + 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}, delay);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (items.length > i + 1) {\r\n\t\t\t\t\t\t\t\tcall(i + 1);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t// Ask items.length first before delay\r\n\t\t\t\t\t// Good for when delay should only be BETWEEN items\r\n\t\t\t\t\t// -----------------------\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (items.length > i + 1) {\r\n\t\t\t\t\t\t\tif (delay) {\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {call(i + 1);}, delay);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcall(i + 1);\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresolve()\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t\tvar ret = callback(items[i]);\r\n\t\t\t\tif (ret instanceof Promise && (sync === true || (sync === 'last' && i === items.length - 1))) {\r\n\t\t\t\t\t// On any of the outcomes...\r\n\t\t\t\t\tret.then(advance);\r\n\t\t\t\t\tret.catch(advance);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadvance();\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\tcall(0);\r\n\t\t} else {\r\n\t\t\tresolve();\r\n\t\t};\r\n\t});\r\n\treturn promise;\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport {\r\n\t_from,\r\n\t_first,\r\n\t_last,\r\n\t_avg,\r\n\t_max,\r\n\t_min,\r\n\t_rand,\r\n\t_sum,\r\n\t_slice, \r\n\t_preceding,\r\n\t_following,\r\n\t_precedingLast,\r\n\t_followingLast,\r\n\t_between,\r\n\t_intersect,\r\n\t_difference,\r\n\t_filter,\r\n\t_divide,\r\n\t_flatten,\r\n\t_sort,\r\n\t_unique,\r\n\t_pushUnique,\r\n\t_concatUnique,\r\n\t_remove,\r\n\t_exclude,\r\n\t_replace,\r\n\t_concatBefore,\r\n\t_concatAfter,\r\n\t_concatBeforeLast,\r\n\t_concatAfterLast, \r\n\t_all,\r\n\t_any,\r\n\t_inSequence\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {_isObject} from '@onephrase/commons/src/Js.js';\r\nimport {_even} from '@onephrase/commons/src/Obj.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ExprInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nexport default class {\r\n\t\r\n\t/**\r\n\t * Compares the current instance with another object.\r\n\t *\r\n\t * @param object Expr\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\teven(Expr) {\r\n\t\tif (_isObject(Expr) && Expr.jsenType === this.jsenType) {\r\n\t\t\treturn _even(Expr, this);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Inherits properties from a super Expr.\r\n\t *\r\n\t * @param ExprInterface Super\r\n\t *\r\n\t * @return this\r\n\t */\r\n\tinherit(Super) {\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds comments to the instance.\r\n\t *\r\n\t * @param string\t comments\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithComments(comments) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.comments = comments;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Adds variables to the instance.\r\n\t *\r\n\t * @param array\t\t vars\r\n\t *\r\n\t * @return this\r\n\t */\r\n\twithVars(vars) {\r\n\t\tif (!this.meta) {\r\n\t\t\tthis.meta = {};\r\n\t\t}\r\n\t\tthis.meta.vars = vars;\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Evaluates the expression instance for a result,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t//eval(context = null, callback = null)\r\n\t\r\n\t/**\r\n\t * Serializes the expression instance back to a string,\r\n\t * optionally in the context of an object.\r\n\t *\r\n\t * @param object context\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t//toString(context = null)\r\n\t\r\n\t/**\r\n\t * SAttempts to parse a string into the class instance.\r\n\t *\r\n\t * @param string expr\r\n\t * @param object params\r\n\t *\r\n\t * @return ExprInterface\r\n\t */\r\n\t//static parse(expr, params = {})\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssignmentInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssignmentExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReferenceInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Reference'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * DeletionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'DeleteExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CallInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'CallExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_remove\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_isArray,\r\n\t_instanceof\r\n} from '@onephrase/commons/src/Js.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Jsen (base) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Jsen = class {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, Parsers, params = {}, Static = Jsen) {\r\n\t\tif (!params.meta) {\r\n\t\t\tparams.meta = {vars: []};\r\n\t\t}\r\n\t\tif (expr.length) {\r\n\t\t\tvar parsers = Object.values(Parsers || Static.grammars);\r\n\t\t\tfor (var i = 0; i < parsers.length; i ++) {\r\n\t\t\t\t// From this point forward, all vars is within current scope\r\n\t\t\t\tvar varsScope = params.meta && _isArray(params.meta.vars) ? params.meta.vars.length : 0;\r\n\t\t\t\tvar parsed = parsers[i].parse(expr, (_expr, _Parsers) => Jsen.parse(_expr, _Parsers, params, Static));\r\n\t\t\t\t// Add/remove vars to scope\r\n\t\t\t\tif (parsed && params.meta) {\r\n\t\t\t\t\tif (!parsed.meta) {\r\n\t\t\t\t\t\tparsed.meta = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Reap vars into scope expr\r\n\t\t\t\t\tparsed.meta.vars = params.meta.vars.slice(varsScope);\r\n\t\t\t\t\t// Add vars to scope\r\n\t\t\t\t\tif (_instanceof(parsed, ReferenceInterface) || _instanceof(parsed, CallInterface)) {\r\n\t\t\t\t\t\t_remove(parsed.meta.vars, parsed.context);\r\n\t\t\t\t\t\t_remove(params.meta.vars, parsed.context);\r\n\t\t\t\t\t\tparams.meta.vars.push(parsed);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed && params.explain) {\r\n\t\t\t\t\tconsole.log(expr, ' >>------------->> ', parsed.jsenType);\r\n\t\t\t\t}\r\n\t\t\t\tif ((parsed instanceof AssignmentInterface || parsed instanceof DeletionInterface) \r\n\t\t\t\t&& (!params || !params.mutates)) {\r\n\t\t\t\t\tthrow new Error('[Permission error:] ' + expr);\r\n\t\t\t\t}\r\n\t\t\t\tif (parsed) {\r\n\t\t\t\t\treturn parsed;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (params.assert === false) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthrow new Error('[Syntax error:] ' + expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_isString,\r\n\t_isUndefined\r\n} from '@onephrase/commons/src/Js.js';\r\nimport {\r\n\t_from,\r\n\t_flatten,\r\n\t_first,\r\n\t_last\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_merge,\r\n\t_even,\r\n\t_copyPlain\r\n} from '@onephrase/commons/src/Obj.js';\r\n\r\n/**\r\n * --------------------------\r\n * TOKENIZER\r\n * --------------------------\r\n */\r\n\r\nconst Lexer = class {\r\n\r\n\t/**\r\n\t * Factory method.\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic lex(str, delims, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Argument1 must be a string!');\r\n\t\t}\r\n\t\t// CREATE NEW -----------------------------\r\n\t\tvar instance = new Lexer(str, options);\r\n\t\t// GIVE CACHE -----------------------------\r\n\t\tLexer.$cache[str] = Lexer.$cache[str] || [];\r\n\t\tLexer.$cache[str].push(instance);\r\n\t\t// RETURN NEW -----------------------------\r\n\t\treturn instance.lex(delims);\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .split().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic split(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).tokens;\r\n\t}\r\n\r\n\t/**\r\n\t * Factory method for .match().\r\n\t *\r\n\t * Handles caching.\r\n\t *\r\n\t * @see constructor()\r\n\t */\r\n\tstatic match(str, delims, options) {\r\n\t\treturn Lexer.lex(str, delims, options).matches;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a lexer instance on a string with the given options.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t * @param string \t\tblocks\t\t\t\tThe strings that begin and end a nested structure\r\n\t * @param number \t\tlimit\t\t\t\tMax results to return\r\n\t * @param string \t\tbackreference\t\tA character like (\\) that prefixes non-delim characters\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tconstructor(str, options) {\r\n\t\tif (!_isString(str)) {\r\n\t\t\tthrow new Error('Lexer requires the first argument to be a string.');\r\n\t\t}\r\n\t\tthis.$str = str;\r\n\t\tthis.$options = options || {};\r\n\t\tif (!this.$options.blocks) {\r\n\t\t\tthis.$options.blocks = Lexer.$blocks;\r\n\t\t}\r\n\t\tif (!this.$options.quotes) {\r\n\t\t\tthis.$options.quotes = Lexer.$quotes;\r\n\t\t}\r\n\t\tif (!this.$options.comments) {\r\n\t\t\tthis.$options.comments = Lexer.$comments;\r\n\t\t}\r\n\t\tthis.$cache = [];\r\n\t}\r\n\r\n\t/**\r\n\t * Parses the instance string on the given delimeters.\r\n\t *\r\n\t * This method supports static calling,\r\n\t * in which case a string is required as the first argument.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tlex(delims, options) {\r\n\t\tvar runtime = {\r\n\t\t\tdelims: _from(delims),\r\n\t\t\toptions: _merge(true, {}, this.$options, options || {}),\r\n\t\t\tnesting: [],\r\n\t\t\tmaxDepth: 0,\r\n\t\t\tcomments: [],\r\n\t\t\ttokens: [],\r\n\t\t\tmatches: [],\r\n\t\t\tmatchesi: {},\r\n\t\t};\r\n\t\t// ASK INSTANCE CACHE ---------------------------\r\n\t\tif (runtime.options.cache !== false) {\r\n\t\t\tfor (var i = 0; i < this.$cache.length; i ++) {\r\n\t\t\t\tif (_even(this.$cache[i].delims, runtime.delims) && _even(this.$cache[i].options, runtime.options)) {\r\n\t\t\t\t\treturn _copyPlain(this.$cache[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// EVALUATE NEW --------------------------------\r\n\t\t// Iterate over each character, keep track of current row and column (of the returned array)\r\n\t\tthis._evalCharsAt(runtime, 0);\r\n\t\tif (runtime.nesting.length) {\r\n\t\t\tthrow new Error('Error parsing the string: ' + this.$str + '. Unterminated blocks: ' + _flatten(runtime.nesting).join(', ') + '');\r\n\t\t}\r\n\t\t// GIVE CACHE ----------------------------------\r\n\t\tif (runtime.options.cache !== false) {\r\n\t\t\tthis.$cache.push(runtime);\r\n\t\t}\r\n\t\t// RETURN NEW ----------------------------------\r\n\t\treturn runtime;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: evaluates and handles the character on the current cursor.\r\n\t * Advances the cursor.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_evalCharsAt(runtime, i) {\r\n\t\tif (i >= this.$str.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar charWidth = 1;\r\n\t\tvar commentTest = {}, quoteTest = {}, nestingTest = {};\r\n\t\t// Quotes inside comments must be ignored\r\n\t\tif (!runtime.openComment) {\r\n\t\t\tquoteTest = this._testQuotes(runtime, i);\r\n\t\t}\r\n\t\t// Comments inside quotes must be ignored\r\n\t\tif (!runtime.openQuote) {\r\n\t\t\tcommentTest = this._testComments(runtime, i);\r\n\t\t}\r\n\t\t// Save comments\r\n\t\tif (runtime.openComment || commentTest.ending) {\r\n\t\t\t// Save only outer comments\r\n\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\tvar chars = commentTest.starting || commentTest.ending || this.$str[i];\r\n\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\tthis._push(runtime, chars, 'comments');\r\n\t\t\t\tif (runtime.options.preserveComments) {\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t}\r\n\t\t} else if (runtime.openQuote || quoteTest.ending) {\r\n\t\t\t// Yes add quotes\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t} else if (runtime.options.limit && runtime.matches.length === runtime.options.limit) {\r\n\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\treturn this._evalCharsAt(runtime, i + 1);\r\n\t\t} else {\r\n\t\t\t// Nesting tags inside comments and quotes have been ignored\r\n\t\t\tnestingTest = this._testNesting(runtime, i);\r\n\t\t\t// ---------------------\r\n\t\t\t// STOP ON THIS CHARACTER...?\r\n\t\t\t// ---------------------\r\n\t\t\tvar nestingTest = this._testNesting(runtime, i);\r\n\t\t\t// STOP CHAR(S)? at top level?\r\n\t\t\tvar stopChar = this._testChars(runtime.options.stopChars || [], runtime, i);\r\n\t\t\tif (!runtime.nesting.length && stopChar !== false) {\r\n\t\t\t\truntime.options.stopChar = stopChar;\r\n\t\t\t\truntime.options.stopCharForward = this.$str.substr(i);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// ---------------------\r\n\t\t\t// Match and split now...\r\n\t\t\t// ---------------------\r\n\t\t\tif (!runtime.delims.length) {\r\n\t\t\t\t// BLOCK-BASED SPLITTING...\r\n\t\t\t\tif (runtime.nesting.length === 2 && nestingTest.starting) {\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t\tthis._push(runtime, nestingTest.starting);\r\n\t\t\t\t\tcharWidth = nestingTest.starting.length;\r\n\t\t\t\t} else if (!runtime.nesting.length && nestingTest.ending) {\r\n\t\t\t\t\tthis._push(runtime, nestingTest.ending);\r\n\t\t\t\t\tcharWidth = nestingTest.ending.length;\r\n\t\t\t\t\truntime.matches.push(null);\r\n\t\t\t\t} else/*no-nesting flag*/ {\r\n\t\t\t\t\tthis._push(runtime, this.$str[i]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// ---------------------\r\n\t\t\t\t// DELIMS-BASED SPLITTING\r\n\t\t\t\t// ---------------------\r\n\t\t\t\tif (!runtime.nesting.length && !nestingTest.ending) {\r\n\t\t\t\t\t// In case the chars at index 0 is a delim,\r\n\t\t\t\t\t// the resulting split should first have an empty string, instead of undefined\r\n\t\t\t\t\tthis._push(runtime, '');\r\n\t\t\t\t\tvar matchedDelim = this._testChars(runtime.delims, runtime, i);\r\n\t\t\t\t\tif (matchedDelim !== false) {\r\n\t\t\t\t\t\truntime.matches.push(matchedDelim);\r\n\t\t\t\t\t\truntime.matchesi[i] = matchedDelim;\r\n\t\t\t\t\t\tcharWidth = matchedDelim.length || 1;\r\n\t\t\t\t\t\tif (!runtime.options.preserveDelims) {\r\n\t\t\t\t\t\t\t// The current character is a delimiter...\r\n\t\t\t\t\t\t\t// and should not get to appending to the split series down the line\r\n\t\t\t\t\t\t\treturn this._evalCharsAt(runtime, i + (matchedDelim.length || 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._push(runtime, matchedDelim || this.$str[i]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar chars = nestingTest.starting || nestingTest.ending || this.$str[i];\r\n\t\t\t\t\tcharWidth = chars.length;\r\n\t\t\t\t\tthis._push(runtime, chars);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._evalCharsAt(runtime, i + charWidth);\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a quote start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testQuotes(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.quotes || []).forEach(quote => {\r\n\t\t\tif (this.$str.substr(i, 1) === quote) {\r\n\t\t\t\tif (!runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = quote;\r\n\t\t\t\t\tresult.starting = quote;\r\n\t\t\t\t} else if (quote === runtime.openQuote) {\r\n\t\t\t\t\truntime.openQuote = false;\r\n\t\t\t\t\tresult.ending = quote;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a comment start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testComments(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.comments || []).forEach(block => {\r\n\t\t\tif (!runtime.openComment) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + _first(block)));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\truntime.openComment = block;\r\n\t\t\t\t\tresult.starting = m[0];\r\n\t\t\t\t}\r\n\t\t\t} else if (_last(block) === _last(runtime.openComment)) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + _last(block)));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\truntime.openComment = false;\r\n\t\t\t\t\tresult.ending = m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a nesting start/end character on the current cursor.\r\n\t *\r\n\t * @param object\truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return object\r\n\t */\r\n\t_testNesting(runtime, i) {\r\n\t\tvar result = {};\r\n\t\t(runtime.options.blocks || []).forEach(block => {\r\n\t\t\tvar starting = this.$str.substr(i).match(new RegExp('^' + _first(block)));\r\n\t\t\tif (starting) {\r\n\t\t\t\truntime.nesting = runtime.nesting.concat([block]);\r\n\t\t\t\tresult.starting = starting[0];\r\n\t\t\t} else if (runtime.nesting.length && _last(block) === _last(_last(runtime.nesting))) {\r\n\t\t\t\tvar ending = this.$str.substr(i).match(new RegExp('^' + _last(block)));\r\n\t\t\t\tif (ending) {\r\n\t\t\t\t\truntime.nesting = runtime.nesting.slice(0, -1);\r\n\t\t\t\t\tresult.ending = ending[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\truntime.maxDepth = Math.max(runtime.maxDepth, runtime.nesting.length);\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Expr helper: tests for a delimiter or stop character on the current cursor.\r\n\t *\r\n\t * @param array\t\ttestList\r\n\t * @param object \truntime\r\n\t * @param int\t\ti\r\n\t *\r\n\t * @return mixed\r\n\t */\r\n\t_testChars(testList, runtime, i) {\r\n\t\tfor (var k = 0; k < testList.length; k ++) {\r\n\t\t\tvar test = testList[k];\r\n\t\t\tif (runtime.options.useRegex) {\r\n\t\t\t\tvar m = this.$str.substr(i).match(new RegExp('^' + test, runtime.options.useRegex !== true ? runtime.options.useRegex : ''));\r\n\t\t\t\tif (m) {\r\n\t\t\t\t\treturn m[0];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ((!runtime.options.ci && this.$str.substr(i, test.length) === test)\r\n\t\t\t|| (runtime.options.ci && this.$str.substr(i, test.length).toLowerCase() === test.toLowerCase())) {\r\n\t\t\t\treturn test;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Expr helper: pushes a character or set of characters into the current split series.\r\n\t *\r\n\t * @param object \truntime\r\n\t * @param string\tchars\r\n\t * @param string\ttarget\r\n\t *\r\n\t * @return void\r\n\t */\r\n\t_push(runtime, chars, target = 'tokens') {\r\n\t\tvar splitSeries = runtime.matches.length;\r\n\t\tif (_isUndefined(runtime[target][splitSeries])) {\r\n\t\t\truntime[target][splitSeries] = '';\r\n\t\t}\r\n\t\truntime[target][splitSeries] += chars;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tsplit(str, delims, options) {\r\n\t\treturn this.lex(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters and returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions:\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tmatch(str, delims, options) {\r\n\t\treturn this.lex(delims, options).matches;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Parses the instance string on the given delimeters using regex.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return object\r\n\t */\r\n\tregParse(delims, options) {\r\n\t\treturn this.lex(delims, _merge({useRegex: true}, options || {}));\r\n\t}\r\n\t\r\n\t/**\r\n\t * Splits the instance string on the given delimeters using regex; returns the tokens.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregSplit(delims, options) {\r\n\t\treturn this.regParse(delims, options).tokens;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Matches the instance string on the given delimeters using regex; returns the matches.\r\n\t *\r\n\t * @param string \tstr\r\n\t * @param object\toptions\r\n\t *\r\n\t * @return array\r\n\t */\r\n\tregMatch(delims, options) {\r\n\t\treturn this.regParse(delims, options).matches;\r\n\t}\r\n};\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$blocks = [['\\\\(', '\\\\)'], ['\\\\[', '\\\\]'], ['\\\\{', '\\\\}'],];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$quotes = ['\"', \"'\", '`',];\r\n\r\n/**\r\n * @var array\r\n */\r\nLexer.$comments = [['\\\\/\\\\*', '\\\\*\\\\/'], ['\\\\/\\\\/', '(\\\\r)?\\\\n'],];\r\n\r\n/**\r\n * @var object\r\n */\r\nLexer.$cache = {};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Lexer;\r\n\r\n","\r\n/**\r\n * @exports\r\n */\r\nexport default class extends Array {};","\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\n/**\r\n * Tells if the string is warapped with the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return bool\r\n */\r\nconst _wrapped = function(subject, openingTag, closingTag) {\r\n\treturn subject.startsWith(openingTag) && subject.endsWith(closingTag);\r\n};\r\n\r\n/**\r\n * Returns the string without the given opening and closing tags.\r\n *\r\n * @param  string  subject\r\n * @param  string  openingTag\r\n * @param  string  closingTag\r\n *\r\n * @return string\r\n */\r\nconst _unwrap = function(subject, openingTag, closingTag) {\r\n\treturn _beforeLast(_after(subject, openingTag), closingTag);\r\n};\r\n\r\n/**\r\n * Return the part of a string before a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   beforeLast\r\n *\r\n * @return string\r\n */\r\nconst _before = function(subject, search, beforeLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = beforeLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn subject;\r\n\t}\r\n\treturn subject.substr(0, pos);\r\n};\r\n\r\n/**\r\n * Return the part of a string before last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nconst _beforeLast = function(subject, search) {\r\n\treturn _before(subject, search, true);\r\n};\r\n\r\n/**\r\n * Return the remainder of a string after a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n * @param  bool\t   afterLast\r\n *\r\n * @return string\r\n */\r\nconst _after = function(subject, search, afterLast = false) {\r\n\tif (search == '') {\r\n\t\treturn subject;\r\n\t}\r\n\tvar pos = afterLast ? subject.lastIndexOf(search) : subject.indexOf(search);\r\n\tif (pos === -1) {\r\n\t\treturn '';\r\n\t}\r\n\treturn subject.substr(pos + search.length);\r\n};\r\n\r\n/**\r\n * Return the remainder of a string after last occurence of a given value.\r\n *\r\n * @param  string  subject\r\n * @param  string  search\r\n *\r\n * @return string\r\n */\r\nconst _afterLast = function(subject, search) {\r\n\treturn _after(subject, search, true);\r\n}\r\n \r\n/**\r\n * Converts a string to title case.\r\n *\r\n * @param string \tstr\r\n * @param bool \t\tstrict\r\n *\r\n * @return string\r\n */\r\nconst _toTitle = function(str, strict) {\r\n\tif (typeof str !== 'string') {\r\n\t\treturn str;\r\n\t}\r\n\treturn str.replace(/\\w\\S*/g,  function(txt) { return txt.charAt(0).toUpperCase() + ((typeof strict !== undefined && strict) ? txt.substr(1).toLowerCase() : txt.substr(1)); })\r\n};\r\n\r\n/**\r\n * Makes a string camel-cased.\r\n *\r\n * @param string \tstr\r\n * @param bool\t \tfromStart\r\n *\r\n * @return string\r\n */\r\nconst _toCamel = function(str, fromStart) {\r\n\t// Make disting words\r\n\tstr = _toTitle(str.replace(/-/g, ' ')).replace(/ /g, '');\r\n\treturn fromStart ? str : str[0].toLowerCase() + str.substr(1);\r\n};\r\n\r\n/**\r\n * Splits a camel-cased string.\r\n *\r\n * @param string \tstr\r\n * @param string \tdelimiter\r\n *\r\n * @return string\r\n */\r\nconst _fromCamel = function(str, delimiter) {\r\n\treturn str === undefined ? '' : str.split(/(?=[A-Z])/).join(delimiter ? delimiter : ' '); // positive lookahead to keep the capital letters\r\n};\r\n\r\n/**\r\n * ReMatches a string against another string.\r\n *\r\n * @param string \tstr\r\n * @param string \tdelimiter\r\n *\r\n * @return string\r\n */\r\nconst _matches = function(str, delimiter) {\r\n\treturn lllll;\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\t_wrapped,\r\n\t_unwrap,\r\n\t_before,\r\n\t_beforeLast,\r\n\t_after,\r\n\t_afterLast,\r\n\t_toTitle,\r\n\t_toCamel,\r\n\t_fromCamel,\r\n\t_matches\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AbstractionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Abstraction'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport AbstractionInterface from './AbstractionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Abstraction class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Abstraction = class extends AbstractionInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.expr.eval(context, callback);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.expr.toString(context) + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Abstraction) {\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_unwrap(expr, '(', ')'))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Abstraction;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ArrayType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport ArrInterface from './ArrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Array utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arr = class extends ArrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs || [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ArrInterface) {\r\n\t\t\tvar newExprs = Super.exprs.filter(exprA => {\r\n\t\t\t\treturn this.exprs.reduce((uniqueSoFar, exprB) => uniqueSoFar && !exprA.even(exprB), true);\r\n\t\t\t});\r\n\t\t\tthis.exprs = newExprs.concat(this.exprs);\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.exprs.map(expr => expr.eval(context, callback));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '[' + this.exprs.map(expr => expr.toString(context)).join(', ') + ']';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Arr) {\r\n\t\tif (_wrapped(expr, '[', ']') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(_unwrap(expr, '[', ']'), [','])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n).map(expr => parseCallback(expr));\r\n\t\t\treturn new Static(splits);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @export\r\n */\r\nexport default Arr;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ArgumentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Arguments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport ArgumentsInterface from './ArgumentsInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Arguments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Arguments = class extends ArgumentsInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(list = []) {\r\n\t\tsuper();\r\n\t\tthis.list = list;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.list.map(arg => arg.eval(context, callback));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '(' + this.list.map(arg => arg.toString(context)).join(', ') + ')';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Arguments) {\r\n\t\tvar args; expr = expr.trim();\r\n\t\tif (_wrapped(expr, '(', ')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tLexer.split(_unwrap(expr, '(', ')'), [',']).map(arg => parseCallback(arg.trim()))\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Arguments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * AssertionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'AssertionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_first,\r\n\t_flatten,\r\n\t_unique\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport AssertionInterface from './AssertionInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assertion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assertion = class extends AssertionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(exprs, logic) {\r\n\t\tsuper();\r\n\t\tthis.exprs = exprs;\r\n\t\tthis.logic = logic;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t eval(context = null, callback = null) {\r\n\t\tif (this.logic === '!') {\r\n\t\t\treturn !_first(this.exprs).eval(context, callback);\r\n\t\t}\r\n\t\tvar operators = _flatten(Assertion.operators);\r\n\t\tvar logic = (this.logic || '').trim().toUpperCase();\r\n\t\tvar isOr = logic === (Assertion.operators.or || '').trim().toUpperCase();\r\n\t\tvar isNor = logic === (Assertion.operators.nor || '').trim().toUpperCase();\r\n\t\tvar isAnd = logic === (Assertion.operators.and || '').trim().toUpperCase();\r\n\t\tvar isNand = logic === (Assertion.operators.nand || '').trim().toUpperCase();\r\n\t\tvar lastResult = true, trues = 0;\r\n\t\tfor(var i = 0; i < this.exprs.length; i ++) {\r\n\t\t\tif (isAnd && !lastResult) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (isNand && !lastResult) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tlastResult = this.exprs[i].eval(context, callback);\r\n\t\t\tif (isOr && lastResult) {\r\n\t\t\t\treturn lastResult;\r\n\t\t\t}\r\n\t\t\ttrues += lastResult ? 1 : 0;\r\n\t\t}\r\n\t\tif (isOr) {\r\n\t\t\t// Which is falsey,\r\n\t\t\t// by virtue of getting here\r\n\t\t\treturn lastResult;\r\n\t\t}\r\n\t\tif (isAnd || isNand) {\r\n\t\t\t// For AND and NAND, all entries must be true,\r\n\t\t\t// by virtue of getting here.\r\n\t\t\t// For AND, this means true; for NAND, false\r\n\t\t\treturn isAnd;\r\n\t\t}\r\n\t\t// For NOR, all entries need to be false\r\n\t\treturn isNor && trues === 0;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\t toString(context = null) {\r\n\t\tif (this.logic === '!') {\r\n\t\t\treturn '!' + _first(this.exprs).toString(context);\r\n\t\t}\r\n\t\treturn this.exprs.map(expr => expr.toString(context)).join(' ' + this.logic + ' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Assertion) {\r\n\t\tif (expr.startsWith('!')) {\r\n\t\t\treturn new Static(\r\n\t\t\t\t[parseCallback(expr.substr(1))],\r\n\t\t\t\t'!'\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tvar logic = _unique(parse.matches);\r\n\t\t\tif (logic.length > 1) {\r\n\t\t\t\tthrow new Error('\"AND\" and \"OR\" logic cannot be asserted in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr.trim())),\r\n\t\t\t\t_first(logic)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nAssertion.operators = {\r\n\tand: '&&',\r\n\tor: '||',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assertion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_last\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_isUndefined,\r\n\t_isFunction\r\n} from '@onephrase/commons/src/Js.js';\r\nimport AssignmentInterface from './AssignmentInterface.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Assignment class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Assignment = class extends AssignmentInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, val, operator = '=') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.val = val;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar reference = this.reference.getEval(context, callback);\r\n\t\tvar val = this.val.eval(context, callback);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, reference.context, reference.name, val);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar cntxt = reference.context instanceof Contexts \r\n\t\t\t\t? _last(reference.context) \r\n\t\t\t\t: reference.context;\r\n\t\t\t// -----------------------------\r\n\t\t\tcntxt[reference.name] = val;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.reference.toString(context), this.operator, this.val.toString(context)].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Assignment) {\r\n\t\tvar parse = Lexer.lex(expr, Static.operators);\r\n\t\tif (parse.tokens.length === 2) {\r\n\t\t\tvar reference, val;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.shift().trim())) instanceof ReferenceInterface) \r\n\t\t\t|| !(val = parseCallback(parse.tokens.shift().trim()))) {\r\n\t\t\t\tthrow new Error('Invalid assignment directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, val, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nAssignment.operators = [' = '];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Assignment;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * BoolInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'BooleanType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport BoolInterface from './BoolInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Bool (boolean) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Bool = class extends BoolInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(state) {\r\n\t\tsuper();\r\n\t\tthis.state = state;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.state.toLowerCase().trim() === 'true';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.state;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Bool) {\r\n\t\tvar expr = expr.toLowerCase().trim();\r\n\t\tif (expr === 'true' || expr === 'false') {\r\n\t\t\treturn new Static(expr);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Bool;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_isArray,\r\n\t_isFunction,\r\n\t_isNumeric,\r\n\t_isObject,\r\n\t_isString,\r\n\t_isUndefined\r\n} from '@onephrase/commons/src/Js.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport CallInterface from './CallInterface.js';\r\nimport Arguments from './Arguments.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Call class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Call = class extends CallInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, args) {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.args = args;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar reference = this.reference.getEval(context, callback);\r\n\t\tvar args = this.args.eval(context, callback);\r\n\t\tif (!_isUndefined(reference.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, reference.context, reference.name, args);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar _contexts = reference.context instanceof Contexts \r\n\t\t\t\t? reference.context.slice() \r\n\t\t\t\t: [reference.context];\r\n\t\t\tvar __contexts = _contexts.slice();\r\n\t\t\twhile(_contexts.length) {\r\n\t\t\t\tvar cntxt = _contexts.pop();\r\n\t\t\t\tif (cntxt && _isFunction(cntxt[reference.name])) {\r\n\t\t\t\t\treturn cntxt[reference.name](...args);\r\n\t\t\t\t}\r\n\t\t\t\t// -----------------------------\r\n\t\t\t\tvar utils = Call.utils || {};\r\n\t\t\t\tvar handler = _isNumeric(cntxt) && utils.Num ? utils.Num\r\n\t\t\t\t\t: (_isString(cntxt) && utils.Str ? utils.Str\r\n\t\t\t\t\t\t: (_isArray(cntxt) && utils.Arr ? utils.Arr\r\n\t\t\t\t\t\t\t: (_isObject(cntxt) && utils.Obj ? utils.Obj : null)));\r\n\t\t\t\tif (handler && _isFunction(handler[reference.name])) {\r\n\t\t\t\t\targs.unshift(cntxt);\r\n\t\t\t\t\treturn handler[reference.name](...args);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error('\"' + this + '\" is not a function. (Called on ' + __contexts.map(c => typeof c).join(', ') + ')');\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.reference.toString(context) + this.args.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Call) {\r\n\t\tif (!expr.startsWith('(') && expr.endsWith(')') && !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar tokens = Lexer.split(expr, []);\r\n\t\t\tvar reference, args = tokens.pop();\r\n\t\t\tif (!((reference = parseCallback(tokens.join(''))) instanceof ReferenceInterface) \r\n\t\t\t|| !(args = parseCallback(args, [Arguments]))) {\r\n\t\t\t\tthrow new Error('Invalid call directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, args);\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Call;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * CommentsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Comments'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_after,\r\n\t_before\r\n} from '@onephrase/commons/src/Str.js';\r\nimport CommentsInterface from './CommentsInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comments class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Comments = class extends CommentsInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(comments, type) {\r\n\t\tsuper();\r\n\t\tthis.comments = comments;\r\n\t\tthis.type = type;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn '';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Comments) {\r\n\t\tvar _comments = null;\r\n\t\tvar _expr = null;\r\n\t\tvar type = 0;\r\n\t\tvar commentPlacement = 'before';\r\n\t\t// Oneliner comments\r\n\t\tif (expr.startsWith('//')) {\r\n\t\t\tvar splits = Lexer.split(_after(expr, '//'), [\"\\r\\n\"]);\r\n\t\t\t_comments = splits.shift().trim();\r\n\t\t\t_expr = splits.shift().trim();\r\n\t\t\ttype = 1;\r\n\t\t} else if (expr.startsWith('/*')) {\r\n\t\t\tvar splits = Lexer.split(_after(expr, '/*'), [\"*/\"]);\r\n\t\t\t_comments = splits.shift().trim();\r\n\t\t\t_expr = splits.shift().trim();\r\n\t\t\ttype = 2;\r\n\t\t} else if (expr.endsWith('*/')) {\r\n\t\t\tvar splits = Lexer.split(_beforeLast(expr, '*/'), [\"/*\"]);\r\n\t\t\t_comments = splits.pop().trim();\r\n\t\t\t_expr = splits.pop().trim();\r\n\t\t\ttype = 2;\r\n\t\t\tvar commentPlacement = 'after';\r\n\t\t}\r\n\t\tif (type) {\r\n\t\t\tif (type === 2) {\r\n\t\t\t\t_comments = Lexer.split(_comments.trim(), [\"\\r\\n\"])\r\n\t\t\t\t\t.map(line => line.replace(/^[\\*]+/, ''))\r\n\t\t\t\t\t.filter(line => line.trim());\r\n\t\t\t}\r\n\t\t\tconsole.log(_comments, commentPlacement, expr);\r\n\t\t\t_comments = new Static(_comments, type);\r\n\t\t}\r\n\t\tif (_expr) {\r\n\t\t\t_expr = parseCallback(_expr);\r\n\t\t\t_expr.meta.commenta = _comments;\r\n\t\t\treturn _expr;\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comments;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ComparisonInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ComparisonExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_matches\r\n} from '@onephrase/commons/src/Str.js';\r\nimport {\r\n\t_flatten,\r\n\t_first,\r\n\t_last,\r\n\t_difference\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_isArray,\r\n\t_isObject,\r\n\t_isString\r\n} from '@onephrase/commons/src/Js.js';\r\nimport {\r\n\t_each\r\n} from '@onephrase/commons/src/Obj.js';\r\nimport ComparisonInterface from './ComparisonInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Comparison class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Comparison = class extends ComparisonInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(operand1, operand2, operator) {\r\n\t\tsuper();\r\n\t\tthis.operand1 = operand1;\r\n\t\tthis.operand2 = operand2;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn Comparison.compare(\r\n\t\t\tthis.operand1.eval(context, callback), \r\n\t\t\tthis.operand2.eval(context, callback), \r\n\t\t\tthis.operator\r\n\t\t);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.operand1.toString(context), \r\n\t\t\tthis.operator, \r\n\t\t\tthis.operand2.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Comparison) {\r\n\t\tvar operators = _flatten(Static.operators).map(oper => ' ' + oper + ' ');\r\n\t\tvar parse = Lexer.lex(expr, operators);\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\tif (parse.tokens.length > 2) {\r\n\t\t\t\tthrow new Error('Malformed \"Comparison\" expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(_first(parse.tokens).trim()),\r\n\t\t\t\tparseCallback(_last(parse.tokens).trim()),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * Use the operator type to compare the two operands\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param string \toperator\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic compare(operand1, operand2, operator = '==') {\r\n\t\tif (_flatten(Comparison.operators).indexOf(operator) === -1) {\r\n\t\t\tthrow new Error('The operator \"' + operator + '\" is not recognized.');\r\n\t\t}\r\n\t\tif (_isArray(operand1) && _isArray(operand2) && operator !== '===') {\r\n\t\t\tif (operand1.length !== operand2.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar allItemsMatch = true;\r\n\t\t\toperand1.sort();\r\n\t\t\toperand2.sort();\r\n\t\t\tfor (var i = 0; i < operand1.length; i ++) {\r\n\t\t\t\tallItemsMatch = allItemsMatch && Comparison.compare(operand1[i], operand2[i], operator);\r\n\t\t\t}\r\n\t\t\treturn allItemsMatch;\r\n\t\t} else if (_isObject(operand1) && _isObject(operand2) && operator !== '===') {\r\n\t\t\tvar entry1Keys = Object.keys(operand1);\r\n\t\t\tvar entry2Keys = Object.keys(operand2);\r\n\t\t\tif (entry1Keys.length !== entry2Keys.length || _difference(entry1Keys, entry2Keys).length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar allEntriesMatch = true;\r\n\t\t\t_each(entry1Keys, (i, key) => {\r\n\t\t\t\tallEntriesMatch = allEntriesMatch && Comparison.compare(operand1[key], operand2[key], operator);\r\n\t\t\t});\r\n\t\t\treturn allEntriesMatch;\r\n\t\t}\r\n\t\tswitch(operator) {\r\n\t\t\tcase '===':\r\n\t\t\t\treturn operand1 === operand2;\r\n\t\t\tcase '==':\r\n\t\t\tcase '=':\r\n\t\t\t\treturn operand1 == operand2;\r\n\t\t\tcase '>':\r\n\t\t\t\treturn operand1 > operand2;\r\n\t\t\tcase '<':\r\n\t\t\t\treturn operand1 < operand2;\r\n\t\t\tcase '>=':\r\n\t\t\t\treturn operand1 >= operand2;\r\n\t\t\tcase '<=':\r\n\t\t\t\treturn operand1 <= operand2;\r\n\t\t\tcase '!=':\r\n\t\t\t\treturn operand1 != operand2;\r\n\t\t\tcase '!==':\r\n\t\t\t\treturn operand1 !== operand2;\r\n\t\t\tcase '^=':\r\n\t\t\t\treturn _isString(operand1) && operand1.startsWith(operand2);\r\n\t\t\tcase '$=':\r\n\t\t\t\treturn _isString(operand1) && operand1.endsWith(operand2);\r\n\t\t\tcase '*=':\r\n\t\t\t\t// Contains\r\n\t\t\t\treturn _isArray(operand2) || _isString(operand2) ? operand1.indexOf(operand2) > -1 : false;\r\n\t\t\tcase '~=':\r\n\t\t\t\t// Contains word\r\n\t\t\t\treturn _isString(operand1) && _isString(operand2) && (' ' + operand1 + ' ').indexOf(' ' + operand2 + ' ') > -1;\r\n\t\t\tcase '>=<': // Between\r\n\t\t\t\t if (!(_isArray(operand2) && operand2.length === 2)) {\r\n\t\t\t\t\t throw new Error('A \\'Between\\' comparison requires argument 2 to be an array of exactly 2 values.');\r\n\t\t\t\t }\r\n\t\t\t\t return operand1 >= operand2[0] && operand1 <= operand2[1];\r\n\t\r\n\t\t\tcase '/**/': // Regex\r\n\t\t\t\treturn _matches(operand2, operand1);\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * Compares two operands for differences\r\n\t *\r\n\t * @param mixed\t\toperand1\t\t\r\n\t * @param mixed\t\toperand2\t\t\r\n\t * @param bool\t \tstrict\t\t\r\n\t *\r\n\t * @return bool\r\n\t */\r\n\tstatic diff(operand1, operand2, strict) {\r\n\t\treturn !Comparison.compare(operand1, operand2, strict ? '===' : '==');\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nComparison.operators = {\r\n\texact: {\r\n\t\tis: '===',\r\n\t\tisNull: '===',\r\n\t\tequalsTo: '==',\r\n\t\tnotEqualsTo: '!=',\r\n\t},\r\n\trelative: {\r\n\t\tlesserThan: '<',\r\n\t\tgreaterThan: '>',\r\n\t\tlesserThanOrEqualsTo: '<=',\r\n\t\tgreaterThanOrEqualsTo: '>=',\r\n\t\tbetween: '>=<',\r\n\t},\r\n\tpartial: {\r\n\t\tstartsWith: '^=',\r\n\t\tendsWith: '$=',\r\n\t\tcontains: '*=',\r\n\t\tany: '~=',\r\n\t\tin: '~=',\r\n\t\tmatches: '/**/',\r\n\t},\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Comparison;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ConditionInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ConditionExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ConditionInterface from './ConditionInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Condition class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Condition = class extends ConditionInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(assertion, onTrue, onFalse) {\r\n\t\tsuper();\r\n\t\tthis.assertion = assertion;\r\n\t\tthis.onTrue = onTrue;\r\n\t\tthis.onFalse = onFalse;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.assertion.eval(context, callback) \r\n\t\t\t? this.onTrue.eval(context, callback) \r\n\t\t\t: this.onFalse.eval(context, callback);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [\r\n\t\t\tthis.assertion.toString(context), \r\n\t\t\tCondition.operators[0], \r\n\t\t\tthis.onTrue.toString(context),\r\n\t\t\tCondition.operators[1], \r\n\t\t\tthis.onFalse.toString(context)\r\n\t\t].join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Condition) {\r\n\t\tvar splits = Lexer.split(expr, Static.operators);\r\n\t\tif (splits.length > 1) {\r\n\t\t\tif (splits.length === 2) {\r\n\t\t\t\tthrow new Error('Malformed ternary expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(splits[0].trim()),\r\n\t\t\t\tparseCallback(splits[1].trim()),\r\n\t\t\t\tparseCallback(splits[2].trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nCondition.operators = ['?', ':'];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Condition;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_last\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_isUndefined,\r\n\t_isFunction\r\n} from '@onephrase/commons/src/Js.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport DeletionInterface from './DeletionInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Deletion class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Deletion = class extends DeletionInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(reference, operator = 'delete') {\r\n\t\tsuper();\r\n\t\tthis.reference = reference;\r\n\t\tthis.operator = operator;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar reference = this.reference.getEval(context, callback);\r\n\t\tif (!_isUndefined(reference.context) && !_isUndefined(reference.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, reference.context, reference.name);\r\n\t\t\t}\r\n\t\t\t// -----------------------------\r\n\t\t\tvar cntxt = reference.context instanceof Contexts \r\n\t\t\t\t? _last(reference.context) \r\n\t\t\t\t: reference.context;\r\n\t\t\t// -----------------------------\r\n\t\t\tdelete cntxt[reference.name];\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.operator + ' ' + this.reference.toString(context);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Deletion) {\r\n\t\tvar parse = Lexer.lex(expr, Object.values(Static.operators));\r\n\t\tif (parse.matches.length === 1 && expr.startsWith(parse.matches[0] + ' ')) {\r\n\t\t\tvar reference;\r\n\t\t\tif (!((reference = parseCallback(parse.tokens.pop().trim())) instanceof ReferenceInterface)) {\r\n\t\t\t\tthrow new Error('Invalid delete directive: ' + expr);\r\n\t\t\t}\r\n\t\t\treturn new Static(reference, parse.matches[0].trim());\r\n\t\t}\r\n\t}\r\n};\t\r\n\r\n/**\r\n * @prop array\r\n */\r\nDeletion.operators = {\r\n\tred: 'reduce', \r\n\tdel: 'delete',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Deletion;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * FuncInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'FunctionType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_copy,\r\n\t_each\r\n} from '@onephrase/commons/src/Obj.js';\r\nimport {\r\n\t_flatten\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport FuncInterface from './FuncInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Func class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Func = class extends FuncInterface {\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(paramters, statements, wrappings = {}) {\r\n\t\tsuper();\r\n\t\tthis.paramters = paramters || {};\r\n\t\tthis.statements = statements;\r\n\t\tthis.wrappings = wrappings;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof FuncInterface) {\r\n\t\t\tvar parentParams = Object.keys(Super.paramters);\r\n\t\t\tvar ownParams = Object.keys(this.paramters);\r\n\t\t\tfor (var i = 0; i < Math.max(ownParams.length, parentParams.length); i ++) {\r\n\t\t\t\tvar nameInParent = parentParams[i];\r\n\t\t\t\tvar nameInSelf = ownParams[i];\r\n\t\t\t\tif (!nameInSelf && nameInParent) {\r\n\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInParent + ') in parent function must be implemented.');\r\n\t\t\t\t}\r\n\t\t\t\tif (nameInSelf && nameInParent) {\r\n\t\t\t\t\tvar defaultValInParent = Super.paramters[nameInParent];\r\n\t\t\t\t\tvar defaultValInSelf = this.paramters[nameInSelf];\r\n\t\t\t\t\tif (defaultValInSelf && !defaultValInParent) {\r\n\t\t\t\t\t\tthrow new Error('Parameter #' + i + ' (' + nameInSelf + ') must not have a default value as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (defaultValInSelf && defaultValInParent && defaultValInSelf.jsenType !== defaultValInParent.jsenType) {\r\n\t\t\t\t\t\tthrow new Error('Default value for parameter #' + i + ' (' + nameInSelf + ') must be of type ' + defaultValInParent.jsenType + ' as established in parent function.');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sup = Super;\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn (...args) => {\r\n\t\t\tvar localContext = {};\r\n\t\t\t_each(Object.keys(this.paramters), (i, name) => {\r\n\t\t\t\tvar defaultVal = this.paramters[name];\r\n\t\t\t\tif (args.length - 1 < i && !defaultVal) {\r\n\t\t\t\t\tthrow new Error('The parameter \"' + name + '\" is required.');\r\n\t\t\t\t}\r\n\t\t\t\tlocalContext[name] = args.length > i \r\n\t\t\t\t\t? args[i] \r\n\t\t\t\t\t: (this.paramters[name] \r\n\t\t\t\t\t\t? this.paramters[name].eval(context, callback) \r\n\t\t\t\t\t\t: null);\r\n\t\t\t});\r\n\t\t\tvar multipleContexts = new Contexts(localContext);\r\n\t\t\t// But this newer context should come last\r\n\t\t\tif (context instanceof Contexts) {\r\n\t\t\t\tmultipleContexts = context.concat(multipleContexts);\r\n\t\t\t} else if (context) {\r\n\t\t\t\tmultipleContexts.unshift(context);\r\n\t\t\t}\r\n\t\t\treturn this.statements.eval(multipleContexts, callback);\r\n\t\t};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar paramters = [];\r\n\t\t_each(this.paramters, (name, value) => {\r\n\t\t\tparamters.push(name + (value ? '=' + value.toString(context) : ''));\r\n\t\t});\r\n\t\tvar headNoWrap = this.wrappings.head === false || (paramters.length === 1 && paramters[0].indexOf('=') === -1);\r\n\t\tvar bodyNoWrap = this.wrappings.body === false\r\n\t\treturn (headNoWrap ? paramters[0] : '(' + paramters.join(', ') + ')')\r\n\t\t+ ' => ' + (bodyNoWrap ? this.statements.toString(context) : '{' + this.statements.toString(context) + '}');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Func) {\r\n\t\texpr = expr.trim();\r\n\t\tvar splits;\r\n\t\tif (expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, []).slice(1).filter(b => b.trim())) && splits.length === 2) {\r\n\t\t\tvar arrowFunctionFormatting = false;\r\n\t\t\tvar funcHead = _unwrap(splits.shift().trim(), '(', ')');\r\n\t\t\tvar funcBody = _unwrap(splits.shift().trim(), '{', '}');\r\n\t\t} else if (!expr.startsWith('function') \r\n\t\t&& (splits = Lexer.split(expr, ['=>'])) && splits.length === 2) {\r\n\t\t\tvar funcHead = splits.shift().trim();\r\n\t\t\tvar funcBody = splits.shift().trim();\r\n\t\t\tvar arrowFunctionFormatting = {};\r\n\t\t\tif (_wrapped(funcHead, '(', ')')) {\r\n\t\t\t\tfuncHead = _unwrap(funcHead, '(', ')');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.head = false;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(funcBody, '{', '}')) {\r\n\t\t\t\tfuncBody = _unwrap(funcBody, '{', '}');\r\n\t\t\t} else {\r\n\t\t\t\tarrowFunctionFormatting.body = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar paramters = {};\r\n\t\tLexer.split(funcHead, [',']).forEach(param => {\r\n\t\t\tvar paramSplit = param.split('=');\r\n\t\t\tif (paramSplit[1]) {\r\n\t\t\t\tparamters[paramSplit[0].trim()] = parseCallback(paramSplit[1].trim());\r\n\t\t\t} else {\r\n\t\t\t\tparamters[param.trim()] = null;\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar statements = parseCallback(funcBody);\r\n\t\treturn new Static(paramters, statements, arrowFunctionFormatting);\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nFunc.operators = ['=>',];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Func;","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * MathInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'MathExpression'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_flatten,\r\n\t_intersect,\r\n\t_unique\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_isNumeric\r\n} from '@onephrase/commons/src/Js.js';\r\nimport MathInterface from './MathInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Math class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Math = class extends MathInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(val, exprs) {\r\n\t\tsuper();\r\n\t\tthis.val = val;\r\n\t\tthis.exprs = exprs;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.exprs.reduce((currentTotal, expr) => {\r\n\t\t\tvar val = expr.val.eval(context, callback);\r\n\t\t\tvar operator = expr.operator.trim();\r\n\t\t\tif ((!_isNumeric(currentTotal) || !_isNumeric(val)) && operator !== '+') {\r\n\t\t\t\tthrow new Error('Invalid Math expression: ' + this.toString() + '!');\r\n\t\t\t}\r\n\t\t\tswitch(operator) {\r\n\t\t\t\tcase '+':\r\n\t\t\t\t\treturn currentTotal + val;\r\n\t\t\t\tcase '-':\r\n\t\t\t\t\treturn currentTotal - val;\r\n\t\t\t\tcase '*':\r\n\t\t\t\t\treturn currentTotal * val;\r\n\t\t\t\tcase '/':\r\n\t\t\t\t\treturn currentTotal / val;\r\n\t\t\t}\r\n\t\t}, this.val.eval(context, callback));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn [this.val.toString(context)].concat(\r\n\t\t\tthis.exprs.map(expr => expr.operator + ' ' + expr.val.toString(context))\r\n\t\t).join(' ');\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Math) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1 && parse.matches.length === parse.tokens.length - 1) {\r\n\t\t\tvar operators = _unique(parse.matches);\r\n\t\t\tif (_intersect(operators, Math.operators.sup).length && _intersect(operators, Math.operators.sub).length) {\r\n\t\t\t\tthrow new Error('\"Addition/subtraction\" and \"multiplication/division\" operators cannot be used in the same expression: ' + expr + '!');\r\n\t\t\t}\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(parse.tokens.shift().trim()),\r\n\t\t\t\tparse.tokens.map((expr, i) => {return {\r\n\t\t\t\t\toperator: parse.matches[i],\r\n\t\t\t\t\tval: parseCallback(expr.trim())\r\n\t\t\t\t};})\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nMath.operators = {\r\n\tsup: ['*', '/'],\r\n\tsub: [' + ', ' - '],\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Math;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * NumInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'NumberType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_isNumeric\r\n} from '@onephrase/commons/src/Js.js';\r\nimport NumInterface from './NumInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Num = class extends NumInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(int, dec = 0) {\r\n\t\tsuper();\r\n\t\tthis.int = int;\r\n\t\tthis.dec = dec;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn parseFloat(this.int + (this.dec ? '.' + this.dec : null));\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.int + (this.dec ? '.' + this.dec : null);\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Num) {\r\n\t\tif (_isNumeric(expr)) {\r\n\t\t\tvar expr = expr.split('.');\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseInt(expr.shift()),\r\n\t\t\t\tparseInt(expr.shift())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Num;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ObjInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ObjectType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_first,\r\n\t_last\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport {\r\n\t_each\r\n} from '@onephrase/commons/src/Obj.js';\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport ObjInterface from './ObjInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Object utils\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Obj = class extends ObjInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(entries) {\r\n\t\tsuper();\r\n\t\tthis.entries = entries || {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tinherit(Super) {\r\n\t\tif (Super instanceof ObjInterface) {\r\n\t\t\t_each(Super.entries, (name, val) => {\r\n\t\t\t\tif (!(name in this.entries)) {\r\n\t\t\t\t\tthis.entries[name] = val;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar items = {};\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\titems[key] = expr.eval(context, callback);\r\n\t\t});\r\n\t\treturn items;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar str = [];\r\n\t\t_each(this.entries, (key, expr) => {\r\n\t\t\tstr.push(key + Obj.operators.sub + expr.toString(context));\r\n\t\t});\r\n\t\treturn '{' + str.join(Obj.operators.sup) + '}';\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Obj) {\r\n\t\tif (_wrapped(expr, '{', '}') && !Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar entries = {};\r\n\t\t\tvar _entriesSplit = Lexer.split(_unwrap(expr, '{', '}'), [Obj.operators.sup])\r\n\t\t\t\t.map(n => n.trim()).filter(n => n);\r\n\t\t\t_each(_entriesSplit, (key, expr) => {\r\n\t\t\t\tvar entry = Lexer.split(expr, [Obj.operators.sub], {limit:1}/*IMPORTANT*/);\r\n\t\t\t\tentries[_first(entry).trim()] = parseCallback(_last(entry).trim());\r\n\t\t\t});\r\n\t\t\treturn new Static(entries);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop object\r\n */\r\nObj.operators = {\r\n\tsup: ',',\r\n\tsub: ':',\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Obj;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport {\r\n\t_isUndefined,\r\n\t_isFunction\r\n} from '@onephrase/commons/src/Js.js';\r\nimport {\r\n\t_from as _arr_from\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport ReferenceInterface from './ReferenceInterface.js';\r\nimport ExprInterface from '../ExprInterface.js';\r\nimport Contexts from '../Contexts.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Reference class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Reference = class extends ReferenceInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(context, name, backticks = false) {\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.name = name;\r\n\t\tthis.backticks = backticks;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tgetEval(context = null, callback = null) {\r\n\t\tvar sourceContext = context, name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = name.eval(context, callback);\r\n\t\t\t}\r\n\t\t\tsourceContext = this.context.eval(context, callback);\r\n\t\t}\r\n\t\treturn {context:sourceContext, name:name,};\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar parts = this.getEval(context, callback);\r\n\t\tif (!_isUndefined(parts.context) && !_isUndefined(parts.name)) {\r\n\t\t\tif (_isFunction(callback)) {\r\n\t\t\t\treturn callback(this, parts.context, parts.name);\r\n\t\t\t}\r\n\t\t\tvar _contexts = parts.context instanceof Contexts \r\n\t\t\t\t? parts.context.slice() \r\n\t\t\t\t: (parts.context ? [parts.context] : []);\r\n\t\t\twhile(_contexts.length) {\r\n\t\t\t\tvar cntxt = _contexts.pop(), val = cntxt[parts.name];\r\n\t\t\t\tif (!_isUndefined(val)) {\r\n\t\t\t\t\treturn val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\tvar name = this.name;\r\n\t\tif (this.context) {\r\n\t\t\tvar subjectContext = this.context.toString(context);\r\n\t\t\tif (name instanceof ExprInterface) {\r\n\t\t\t\tname = '[' + name.toString(context) + ']';\r\n\t\t\t} else if (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar subjectContext = context;\r\n\t\t\tif (this.backticks) {\r\n\t\t\t\tname = '`' + name + '`';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn (subjectContext || '') + (subjectContext && !name.startsWith('[') ? Reference.separator : '') + name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Reference) {\r\n\t\tif (!Lexer.match(expr.trim(), [' ']).length) {\r\n\t\t\tvar splits = Lexer.split(expr, []);\r\n\t\t\t// ------------------------\r\n\t\t\t// name, first\r\n\t\t\t// ------------------------\r\n\t\t\tvar context, name = splits.pop(), backticks;\r\n\t\t\tvar nameSplit = Lexer.split(name.trim(), [Static.separator], {preserveDelims:true});\r\n\t\t\tif (nameSplit.length > 1) {\r\n\t\t\t\tname = nameSplit.pop().substr(1);\r\n\t\t\t\tsplits = splits.concat(nameSplit);\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '`', '`')) {\r\n\t\t\t\tname = _unwrap(name, '`', '`');\r\n\t\t\t\tbackticks = true;\r\n\t\t\t}\r\n\t\t\t// ------------------------\r\n\t\t\t// context, second\r\n\t\t\t// ------------------------\r\n\t\t\tif (splits.length) {\r\n\t\t\t\tcontext = parseCallback(splits.join(''));\r\n\t\t\t\tcontext.isContext = true;\r\n\t\t\t}\r\n\t\t\tif (_wrapped(name, '[', ']')) {\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tthrow new Error('Invalid reference: ' + expr + '!');\r\n\t\t\t\t}\r\n\t\t\t\tname = parseCallback(_unwrap(name, '[', ']'));\r\n\t\t\t}\r\n\t\t\treturn new Static(context, name, backticks);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop string\r\n */\r\nReference.separator = '.';\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Reference;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * ReturnInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'ReturnDirective'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Lexer from '../Lexer.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Ret (return) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Return = class extends ReturnInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\treturn this.expr ? this.expr.eval(context, callback) : undefined;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.expr ? 'return ' + this.expr.toString(context) : 'return';\r\n\t}\r\n\t\r\n\t/**\r\n\t * -------------------------------------------------------\r\n\t */\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Return) {\r\n\t\tvar exprLc = expr.toLowerCase();\r\n\t\tif (exprLc.startsWith('return ') || exprLc === 'return') {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparseCallback(expr.substr(6).trim())\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Return;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StatementsInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'Statements'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_flatten\r\n} from '@onephrase/commons/src/Arr.js';\r\nimport StatementsInterface from './StatementsInterface.js';\r\nimport ReturnInterface from './ReturnInterface.js';\r\nimport Lexer from '../Lexer.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Statements class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Statements = class extends StatementsInterface {\r\n\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(stmts, delim) {\r\n\t\tsuper();\r\n\t\tthis.stmts = exprs;\r\n\t\tthis.delim = delim;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval(context = null, callback = null) {\r\n\t\tvar exprs = [];\r\n\t\tfor (var i = 0; i < this.stmts.length; i ++) {\r\n\t\t\tif (this.stmts[i] instanceof ReturnInterface) {\r\n\t\t\t\treturn this.stmts[i].eval(context, callback);\r\n\t\t\t} else {\r\n\t\t\t\texprs[i] = this.stmts[i].eval(context, callback);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn exprs;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString(context = null) {\r\n\t\treturn this.stmts.map(expr => expr.toString(context)).join(this.delim);\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Statements) {\r\n\t\tvar parse = Lexer.lex(expr, _flatten(Static.operators));\r\n\t\tif (parse.tokens.length > 1) {\r\n\t\t\treturn new Static(\r\n\t\t\t\tparse.tokens.map(expr => parseCallback(expr)),\r\n\t\t\t\tparse.matches[0].trim()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @prop array\r\n */\r\nStatements.operators = [\r\n\t';',\r\n\t\"\\r\\n\",\r\n];\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Statements;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport ExprInterface from '../ExprInterface.js';\r\n\r\n/**\r\n * ---------------------------\r\n * StrInterface\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\nconst Interface = class extends ExprInterface {};\r\nObject.defineProperty(Interface.prototype, 'jsenType', {\r\n\tget() { return 'StringType'; },\r\n});\r\nexport default Interface;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {\r\n\t_wrapped,\r\n\t_unwrap\r\n} from '@onephrase/commons/src/Str.js';\r\nimport StrInterface from './StrInterface.js';\r\nimport Lexer from '../Lexer.js';\r\nimport Bool from './Bool.js';\r\n\r\n/**\r\n * ---------------------------\r\n * String utils\r\n * ---------------------------\r\n */\r\n\r\nconst Str = class extends StrInterface {\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tconstructor(expr, quote) {\r\n\t\tsuper();\r\n\t\tthis.expr = expr;\r\n\t\tthis.quote = quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\teval() {\r\n\t\treturn this.expr;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\ttoString() {\r\n\t\treturn this.quote + this.expr + this.quote;\r\n\t}\r\n\t \r\n\t/**\r\n\t * @inheritdoc\r\n\t */\r\n\tstatic parse(expr, parseCallback, Static = Str) {\r\n\t\texpr = expr.trim();\r\n\t\tif ((_wrapped(expr, '\"', '\"') || _wrapped(expr, \"'\", \"'\")) \r\n\t\t&& !Lexer.match(expr, [' ']).length) {\r\n\t\t\tvar quote = _wrapped(expr, '\"', '\"') ? '\"' : \"'\";\r\n\t\t\treturn new Static(\r\n\t\t\t\t_unwrap(expr, quote, quote),\r\n\t\t\t\tquote\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport default Str;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport {_isObject} from './Js.js';\r\nimport {_each} from './Obj.js';\r\n\r\n/**\r\n * ---------------------------\r\n * Num (number) class\r\n * ---------------------------\r\n */\t\t\t\t\r\n\r\n\r\n/**\r\n * In an array of numbers, returns the item closest to the given value.\r\n *\r\n * @param array|object \tarr\r\n * @param int \t \t\tnum\r\n * @param bool \t \t\tbyKey\r\n *\r\n * @return number\r\n */\r\nconst _closest = function(arr, num, byKey = false) {\r\n\tvar keys = null;\r\n\tvar entries = arr;\r\n\tif (byKey || _isObject(entries)) {\r\n\t\tkeys = Object.keys(entries);\r\n\t\tentries = keys.map(key => entries[key]);\r\n\t}\r\n\tvar closest = entries.reduce((prev, curr) => {\r\n\t  return (Math.abs(curr - num) < Math.abs(prev - num) ? curr : prev);\r\n\t}, undefined);\r\n\treturn keys ? keys[entries.indexOf(closest)] : closest;\r\n};\r\n\r\n/**\r\n * Converts words to numbers\r\n * Adapted from Crunz\\Utils | 22-07-17;\r\n *\r\n * @param  text\r\n *\r\n * @return string\r\n */\r\nconst _fromWords = function(text) {\r\n\tvar data = strtr(text, {\r\n\t\tzero:       '0',\r\n\t\ta:          '1',\r\n\t\tone:        '1',\r\n\t\ttwo:        '2',\r\n\t\tthree:      '3',\r\n\t\tfour:       '4',\r\n\t\tfive:       '5',\r\n\t\tsix:        '6',\r\n\t\tseven:      '7',\r\n\t\teight:      '8',\r\n\t\tnine:       '9',\r\n\t\tten:        '10',\r\n\t\televen:     '11',\r\n\t\ttwelve:     '12',\r\n\t\tthirteen:   '13',\r\n\t\tfourteen:   '14',\r\n\t\tfifteen:    '15',\r\n\t\tsixteen:    '16',\r\n\t\tseventeen: \t'17',\r\n\t\teighteen:   '18',\r\n\t\tnineteen:   '19',\r\n\t\ttwenty:     '20',\r\n\t\tthirty:     '30',\r\n\t\tforty:      '40',\r\n\t\tfourty:     '40',\r\n\t\tfifty:      '50',\r\n\t\tsixty:      '60',\r\n\t\tseventy:    '70',\r\n\t\teighty:     '80',\r\n\t\tninety:     '90',\r\n\t\thundred:    '100',\r\n\t\tthousand:   '1000',\r\n\t\tmillion:    '1000000',\r\n\t\tbillion:    '1000000000',\r\n\t\tand:        '',\r\n\t});\r\n\r\n\t// Coerce all tokens to numbers\r\n\tvar parts = data.split('/[\\s-]+/').map(val => parseFloat(val));\r\n\r\n\tvar tmp   = null;\r\n\tvar sum   = 0;\r\n\tvar last  = null;\r\n\r\n\t_each(parts, (i, part) => {           \r\n\t\tif (tmp !== '') {                \r\n\t\t\tif (tmp > part) {\r\n\t\t\t\tif (last >= 1000) {                                       \r\n\t\t\t\t\tsum += tmp;\r\n\t\t\t\t\ttmp = part;\r\n\t\t\t\t} else {          \r\n\t\t\t\t\ttmp = tmp + part;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttmp = tmp * part;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttmp = part;\r\n\t\t}\r\n\t\t\r\n\t\tlast = part;\r\n\t});\r\n\r\n\treturn sum + tmp;    \r\n};\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\t_closest,\r\n\t_fromWords\r\n};\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport * as _Arr from './Arr.js';\r\nimport * as _Js from './Js.js';\r\nimport * as _Num from './Num.js';\r\nimport * as _Obj from './Obj.js';\r\nimport * as _Str from './Str.js';\r\n\r\n/**\r\n * Standardize functions as\r\n * prototype methods.\r\n */\r\nconst standardize = (a, prototype, prefix = '') => Object.keys(a).reduce((prototype, funcName) => _Obj._with(prototype, prefix + funcName, function() {\r\n\treturn a[funcName](this, ...arguments);\r\n}), prototype);\r\n\r\n/**\r\n * Deliver functions without\r\n * their initial underscore.\r\n */\r\nconst rename = (a, b = {}) => Object.keys(a).reduce((b, funcName) => _Obj._with(b, funcName.substr(1), a[funcName]), b);\r\nconst Arr = rename(_Arr);\r\nconst Js = rename(_Js);\r\nconst Num = rename(_Num);\r\nconst Obj = rename(_Obj);\r\nconst Str = rename(_Str);\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {Arr, Js, Num, Obj, Str, standardize};","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './Jsen.js';\r\nimport ExprInterface from './ExprInterface.js';\r\nimport Lexer from './Lexer.js';\r\nimport Contexts from './Contexts.js';\r\nimport Abstraction from './Expr/Abstraction.js';\r\nimport AbstractionInterface from './Expr/AbstractionInterface.js';\r\nimport Arr from './Expr/Arr.js';\r\nimport ArrInterface from './Expr/ArrInterface.js';\r\nimport Arguments from './Expr/Arguments.js';\r\nimport ArgumentsInterface from './Expr/ArgumentsInterface.js';\r\nimport Assertion from './Expr/Assertion.js';\r\nimport AssertionInterface from './Expr/AssertionInterface.js';\r\nimport Assignment from './Expr/Assignment.js';\r\nimport AssignmentInterface from './Expr/AssignmentInterface.js';\r\nimport Bool from './Expr/Bool.js';\r\nimport BoolInterface from './Expr/BoolInterface.js';\r\nimport Call from './Expr/Call.js';\r\nimport CallInterface from './Expr/CallInterface.js';\r\nimport Comments from './Expr/Comments.js';\r\nimport CommentsInterface from './Expr/CommentsInterface.js';\r\nimport Comparison from './Expr/Comparison.js';\r\nimport ComparisonInterface from './Expr/ComparisonInterface.js';\r\nimport Condition from './Expr/Condition.js';\r\nimport ConditionInterface from './Expr/ConditionInterface.js';\r\nimport Deletion from './Expr/Deletion.js';\r\nimport DeletionInterface from './Expr/DeletionInterface.js';\r\nimport Func from './Expr/Func.js';\r\nimport FuncInterface from './Expr/FuncInterface.js';\r\nimport Math from './Expr/Math.js';\r\nimport MathInterface from './Expr/MathInterface.js';\r\nimport Num from './Expr/Num.js';\r\nimport NumInterface from './Expr/NumInterface.js';\r\nimport Obj from './Expr/Obj.js';\r\nimport ObjInterface from './Expr/ObjInterface.js';\r\nimport Reference from './Expr/Reference.js';\r\nimport ReferenceInterface from './Expr/ReferenceInterface.js';\r\nimport Return from './Expr/Return.js';\r\nimport ReturnInterface from './Expr/ReturnInterface.js';\r\nimport Statements from './Expr/Statements.js';\r\nimport StatementsInterface from './Expr/StatementsInterface.js';\r\nimport Str from './Expr/Str.js';\r\nimport StrInterface from './Expr/StrInterface.js';\r\nimport * as Commons from '@onephrase/commons';\r\n\r\n/**\r\n * @var object\r\n */\r\nJsen.grammars = {\r\n\tComments: Comments,\t\t\t// // single-line | /* double-line */\r\n\tReturn: Return,\t\t\t\t// return field1\r\n\tStatements: Statements,\t\t// field1 = 3; field2 = val2\r\n\tDeletion: Deletion,\t\t\t// delete field1\r\n\tAssignment: Assignment,\t\t// field1[key1].key2 = k\r\n\tFunc: Func,\t\t\t\t\t// (field1, field2) => {}\r\n\tAbstraction: Abstraction,\t// (field1)\r\n\tCondition: Condition,\t\t// field1 > field2 ? val1 : val2\r\n\tAssertion: Assertion,\t\t// !field1 && field2\r\n\tComparison: Comparison,\t\t// field1 > field2\r\n\tMath: Math,\t\t\t\t\t// field1 + field2\r\n\tArr: Arr,\t\t\t\t\t// [field1, field2]\r\n\tObj: Obj,\t\t\t\t\t// {field1:val1, field2:val2}\r\n\tNum: Num,\t\t\t\t\t// [0-9]\r\n\tStr: Str,\t\t\t\t\t// \"\"\r\n\tBool: Bool,\t\t\t\t\t// true\r\n\tCall: Call,\t\t\t\t\t// field1()\r\n\tReference: Reference,\t\t\t\t// field1\r\n};\r\n\r\nCall.utils = Commons;\r\n\r\n/**\r\n * @exports\r\n */\r\nexport {\r\n\tExprInterface,\r\n\tLexer,\r\n\tContexts\r\n};\r\nexport {\r\n\tAbstraction,\r\n\tArr,\r\n\tArguments,\r\n\tAssertion,\r\n\tAssignment,\r\n\tBool,\r\n\tCall,\r\n\tComments,\r\n\tComparison,\r\n\tCondition,\r\n\tDeletion,\r\n\tFunc,\r\n\tMath,\r\n\tNum,\r\n\tObj,\r\n\tReference,\r\n\tReturn,\r\n\tStr,\r\n\tStatements\r\n};\r\nexport {\r\n\tAbstractionInterface,\r\n\tArrInterface,\r\n\tArgumentsInterface,\r\n\tAssertionInterface,\r\n\tAssignmentInterface,\r\n\tBoolInterface,\r\n\tCallInterface,\r\n\tCommentsInterface,\r\n\tComparisonInterface,\r\n\tConditionInterface,\r\n\tDeletionInterface,\r\n\tFuncInterface,\r\n\tMathInterface,\r\n\tNumInterface,\r\n\tObjInterface,\r\n\tReferenceInterface,\r\n\tReturnInterface,\r\n\tStrInterface,\r\n\tStatementsInterface\r\n};\r\nexport default Jsen;\r\n","\r\n/**\r\n * @imports\r\n */\r\nimport Jsen from './index.js';\r\n\r\n// As globals\r\nif (!window.OnePhrase) {\r\n\twindow.OnePhrase = {};\r\n}\r\nwindow.OnePhrase.Jsen = Jsen;"],"sourceRoot":""}